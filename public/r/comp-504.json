{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-504",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-504.vue",
      "content": "<script lang=\"ts\" setup>\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  CalendarCell,\n  CalendarCellTrigger,\n  CalendarGrid,\n  CalendarGridBody,\n  CalendarGridHead,\n  CalendarGridRow,\n  CalendarHeadCell,\n  CalendarHeader,\n  CalendarNextButton,\n  CalendarPrevButton,\n} from \"@/registry/default/ui/calendar\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\";\nimport {\n  CalendarDate,\n  getLocalTimeZone,\n  today,\n  type DateValue,\n} from \"@internationalized/date\";\nimport { useTimeoutFn } from \"@vueuse/core\";\nimport { LucideChevronDown } from \"lucide-vue-next\";\nimport { CalendarRoot } from \"reka-ui\";\n\nconst todayDate = today(getLocalTimeZone());\n\nconst modelValue = ref(todayDate) as Ref<DateValue>;\n\nconst years = Array.from({ length: 40 }, (_, i) => todayDate.year - 20 + i);\n\nconst getMonthName = (month: number) => {\n  return new CalendarDate(todayDate.year, month, 1)\n    .toDate(getLocalTimeZone())\n    .toLocaleString(\"en-US\", { month: \"short\" });\n};\n\nconst isCurrentYear = (year: number) => {\n  return year === modelValue.value.year;\n};\n\nconst collapsibleOpen = ref(false);\n\nconst scrollToCurrentYear = () => {\n  const currentYearElement = document.querySelector(\n    `[data-year=\"${modelValue.value.year}\"]`,\n  );\n\n  if (currentYearElement) {\n    currentYearElement.scrollIntoView({\n      behavior: \"instant\",\n      block: \"start\",\n    });\n  }\n};\n\nconst { start } = useTimeoutFn(scrollToCurrentYear, 0);\n\nwatch(collapsibleOpen, (isOpen) => {\n  if (isOpen) {\n    start();\n  }\n});\n\nconst selectMonth = (year: number, month: number) => {\n  modelValue.value = new CalendarDate(year, month, modelValue.value.day);\n  collapsibleOpen.value = false;\n};\n</script>\n\n<template>\n  <div>\n    <CalendarRoot\n      v-model=\"modelValue\"\n      v-slot=\"{ grid, weekDays }\"\n      data-slot=\"calendar\"\n      class=\"relative rounded-md border p-3\"\n    >\n      <CalendarHeader class=\"static flex justify-between\">\n        <Collapsible v-model:open=\"collapsibleOpen\">\n          <CollapsibleTrigger asChild>\n            <Button\n              class=\"flex items-center gap-2 text-sm font-medium hover:bg-transparent [&[data-state=open]>svg]:rotate-180\"\n              variant=\"ghost\"\n              size=\"sm\"\n            >\n              <CalendarHeading class=\"flex-1\" />\n              <LucideChevronDown\n                class=\"text-muted-foreground/80 size-4 shrink-0 transition-transform duration-200\"\n                aria-hidden=\"true\"\n              />\n            </Button>\n          </CollapsibleTrigger>\n          <CollapsibleContent\n            class=\"bg-background absolute inset-x-0 top-15 bottom-0 z-20\"\n          >\n            <ScrollArea class=\"h-full\">\n              <Collapsible\n                v-for=\"year in years\"\n                :key=\"year\"\n                class=\"border-t px-2 py-1.5\"\n                :defaultOpen=\"isCurrentYear(year)\"\n                :data-year=\"year\"\n              >\n                <CollapsibleTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    class=\"flex w-full justify-start gap-2 text-sm font-medium hover:bg-transparent [&[data-state=open]>svg]:rotate-180\"\n                  >\n                    <LucideChevronDown\n                      class=\"text-muted-foreground/80 size-4 shrink-0 transition-transform duration-200\"\n                      aria-hidden=\"true\"\n                    />\n                    <span>{{ year }}</span>\n                  </Button>\n                </CollapsibleTrigger>\n                <CollapsibleContent\n                  class=\"data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down overflow-hidden px-3 py-1 text-sm transition-all\"\n                >\n                  <div class=\"grid grid-cols-3 gap-2\">\n                    <Button\n                      v-for=\"month in 12\"\n                      :key=\"month\"\n                      :variant=\"\n                        modelValue.year === year && modelValue.month === month\n                          ? 'default'\n                          : 'outline'\n                      \"\n                      size=\"sm\"\n                      class=\"h-7\"\n                      @click=\"selectMonth(year, month)\"\n                    >\n                      {{ getMonthName(month) }}\n                    </Button>\n                  </div>\n                </CollapsibleContent>\n              </Collapsible>\n            </ScrollArea>\n          </CollapsibleContent>\n        </Collapsible>\n\n        <div class=\"flex items-center gap-1\">\n          <CalendarPrevButton />\n          <CalendarNextButton />\n        </div>\n      </CalendarHeader>\n      <div class=\"mt-4 flex flex-col gap-y-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\">\n        <CalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\n          <CalendarGridHead>\n            <CalendarGridRow>\n              <CalendarHeadCell v-for=\"day in weekDays\" :key=\"day\">\n                {{ day }}\n              </CalendarHeadCell>\n            </CalendarGridRow>\n          </CalendarGridHead>\n          <CalendarGridBody>\n            <CalendarGridRow\n              v-for=\"(weekDates, index) in month.rows\"\n              :key=\"`weekDate-${index}`\"\n              class=\"mt-2 w-full\"\n            >\n              <CalendarCell\n                v-for=\"weekDate in weekDates\"\n                :key=\"weekDate.toString()\"\n                :date=\"weekDate\"\n              >\n                <CalendarCellTrigger :day=\"weekDate\" :month=\"month.value\" />\n              </CalendarCell>\n            </CalendarGridRow>\n          </CalendarGridBody>\n        </CalendarGrid>\n      </div>\n    </CalendarRoot>\n    <p class=\"text-muted-foreground mt-4 text-center text-xs\">\n      Advanced selection -\n      <a\n        class=\"hover:text-foreground underline\"\n        href=\"https://reka-ui.com/docs/components/calendar#calendar\"\n        target=\"_blank\"\n        rel=\"noopener nofollow\"\n      >\n        Reka UI Calendar\n      </a>\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "calendar",
      "date",
      "collapsible",
      "react daypicker",
      "radix"
    ],
    "style": 1
  },
  "dependencies": [
    "@internationalized/date",
    "@vueuse/core",
    "lucide-vue-next",
    "reka-ui"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/button.json",
    "https://originui-vue.com/r/calendar.json",
    "https://originui-vue.com/r/collapsible.json"
  ]
}