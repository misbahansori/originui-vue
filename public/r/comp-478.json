{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-478",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-478.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { Checkbox } from \"@/registry/default/ui/checkbox\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/registry/default/ui/table\";\nimport TableFilter from \"@/registry/default/ui/table/TableFilter.vue\";\nimport { valueUpdater } from \"@/registry/default/ui/table/utils\";\nimport {\n  FlexRender,\n  getCoreRowModel,\n  getFacetedMinMaxValues,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getSortedRowModel,\n  useVueTable,\n  type ColumnDef,\n  type ColumnFiltersState,\n  type SortingState,\n} from \"@tanstack/vue-table\";\nimport {\n  LucideChevronDown,\n  LucideChevronUp,\n  LucideExternalLink,\n} from \"lucide-vue-next\";\nimport type { VNodeArrayChildren } from \"vue\";\nimport { h, ref } from \"vue\";\n\ntype Item = {\n  id: string;\n  keyword: string;\n  intents: Array<\n    \"Informational\" | \"Navigational\" | \"Commercial\" | \"Transactional\"\n  >;\n  volume: number;\n  cpc: number;\n  traffic: number;\n  link: string;\n};\n\nconst columns: ColumnDef<Item>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) =>\n      h(Checkbox, {\n        modelValue:\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\"),\n        \"onUpdate:modelValue\": (value: boolean | \"indeterminate\") =>\n          table.toggleAllPageRowsSelected(!!value),\n        \"aria-label\": \"Select all\",\n      }),\n    cell: ({ row }) =>\n      h(Checkbox, {\n        modelValue: row.getIsSelected(),\n        \"onUpdate:modelValue\": (value: boolean | \"indeterminate\") =>\n          row.toggleSelected(!!value),\n        \"aria-label\": \"Select row\",\n      }),\n  },\n  {\n    header: \"Keyword\",\n    accessorKey: \"keyword\",\n    cell: ({ row }) =>\n      h(\"div\", { class: \"font-medium\" }, row.getValue(\"keyword\")),\n    enableSorting: false,\n  },\n  {\n    header: \"Intents\",\n    accessorKey: \"intents\",\n    cell: ({ row }) => {\n      const intents = row.getValue(\"intents\") as string[];\n      return h(\n        \"div\",\n        { class: \"flex gap-1\" },\n        intents.map((intent) => {\n          const styles = {\n            Informational: \"bg-indigo-400/20 text-indigo-500\",\n            Navigational: \"bg-emerald-400/20 text-emerald-500\",\n            Commercial: \"bg-amber-400/20 text-amber-500\",\n            Transactional: \"bg-rose-400/20 text-rose-500\",\n          }[intent];\n\n          return h(\n            \"div\",\n            {\n              key: intent,\n              class: cn(\n                \"flex size-5 items-center justify-center rounded text-xs font-medium\",\n                styles,\n              ),\n            },\n            intent.charAt(0),\n          );\n        }) as VNodeArrayChildren,\n      );\n    },\n    enableSorting: false,\n    meta: {\n      filterVariant: \"select\",\n    },\n    filterFn: (row, id, filterValue) => {\n      const rowValue = row.getValue(id);\n      return Array.isArray(rowValue) && rowValue.includes(filterValue);\n    },\n  },\n  {\n    header: \"Volume\",\n    accessorKey: \"volume\",\n    cell: ({ row }) => {\n      const volume = parseInt(row.getValue(\"volume\"));\n      return new Intl.NumberFormat(\"en-US\", {\n        notation: \"compact\",\n        maximumFractionDigits: 1,\n      }).format(volume);\n    },\n    meta: {\n      filterVariant: \"range\",\n    },\n  },\n  {\n    header: \"CPC\",\n    accessorKey: \"cpc\",\n    cell: ({ row }) => h(\"div\", {}, `$${row.getValue(\"cpc\")}`),\n    meta: {\n      filterVariant: \"range\",\n    },\n  },\n  {\n    header: \"Traffic\",\n    accessorKey: \"traffic\",\n    cell: ({ row }) => {\n      const traffic = parseInt(row.getValue(\"traffic\"));\n      return new Intl.NumberFormat(\"en-US\", {\n        notation: \"compact\",\n        maximumFractionDigits: 1,\n      }).format(traffic);\n    },\n    meta: {\n      filterVariant: \"range\",\n    },\n  },\n  {\n    header: \"Link\",\n    accessorKey: \"link\",\n    cell: ({ row }) =>\n      h(\n        \"a\",\n        {\n          class: \"inline-flex items-center gap-1 hover:underline\",\n          href: \"#\",\n        },\n        [\n          row.getValue(\"link\"),\n          h(LucideExternalLink, {\n            class: \"size-3\",\n            \"aria-hidden\": \"true\",\n          }),\n        ] as VNodeArrayChildren,\n      ),\n    enableSorting: false,\n  },\n];\n\nconst items: Item[] = [\n  {\n    id: \"1\",\n    keyword: \"react components\",\n    intents: [\"Informational\", \"Navigational\"],\n    volume: 2507,\n    cpc: 2.5,\n    traffic: 88,\n    link: \"https://originui.com\",\n  },\n  {\n    id: \"2\",\n    keyword: \"buy react templates\",\n    intents: [\"Commercial\", \"Transactional\"],\n    volume: 1850,\n    cpc: 4.75,\n    traffic: 65,\n    link: \"https://originui.com/input\",\n  },\n  {\n    id: \"3\",\n    keyword: \"react ui library\",\n    intents: [\"Informational\", \"Commercial\"],\n    volume: 3200,\n    cpc: 3.25,\n    traffic: 112,\n    link: \"https://originui.com/badge\",\n  },\n  {\n    id: \"4\",\n    keyword: \"tailwind components download\",\n    intents: [\"Transactional\"],\n    volume: 890,\n    cpc: 1.95,\n    traffic: 45,\n    link: \"https://originui.com/alert\",\n  },\n  {\n    id: \"5\",\n    keyword: \"react dashboard template free\",\n    intents: [\"Commercial\", \"Transactional\"],\n    volume: 4100,\n    cpc: 5.5,\n    traffic: 156,\n    link: \"https://originui.com/tabs\",\n  },\n  {\n    id: \"6\",\n    keyword: \"how to use react components\",\n    intents: [\"Informational\"],\n    volume: 1200,\n    cpc: 1.25,\n    traffic: 42,\n    link: \"https://originui.com/table\",\n  },\n  {\n    id: \"7\",\n    keyword: \"react ui kit premium\",\n    intents: [\"Commercial\", \"Transactional\"],\n    volume: 760,\n    cpc: 6.8,\n    traffic: 28,\n    link: \"https://originui.com/avatar\",\n  },\n  {\n    id: \"8\",\n    keyword: \"react component documentation\",\n    intents: [\"Informational\", \"Navigational\"],\n    volume: 950,\n    cpc: 1.8,\n    traffic: 35,\n    link: \"https://originui.com\",\n  },\n];\n\nconst columnFilters = ref<ColumnFiltersState>([]);\nconst sorting = ref<SortingState>([\n  {\n    id: \"traffic\",\n    desc: false,\n  },\n]);\n\nconst table = useVueTable({\n  get data() {\n    return items;\n  },\n  get columns() {\n    return columns;\n  },\n  state: {\n    get sorting() {\n      return sorting.value;\n    },\n    get columnFilters() {\n      return columnFilters.value;\n    },\n  },\n  getCoreRowModel: getCoreRowModel(),\n  getFilteredRowModel: getFilteredRowModel(),\n  getSortedRowModel: getSortedRowModel(),\n  getFacetedRowModel: getFacetedRowModel(),\n  getFacetedUniqueValues: getFacetedUniqueValues(),\n  getFacetedMinMaxValues: getFacetedMinMaxValues(),\n  onSortingChange: (updater) => valueUpdater(updater, sorting),\n  onColumnFiltersChange: (updater) => valueUpdater(updater, columnFilters),\n  enableSortingRemoval: false,\n});\n</script>\n\n<template>\n  <div class=\"space-y-6\">\n    <div class=\"flex flex-wrap gap-3\">\n      <div class=\"w-44\">\n        <TableFilter :column=\"table.getColumn('keyword')!\" />\n      </div>\n      <div class=\"w-36\">\n        <TableFilter :column=\"table.getColumn('intents')!\" />\n      </div>\n      <div class=\"w-36\">\n        <TableFilter :column=\"table.getColumn('volume')!\" />\n      </div>\n      <div class=\"w-36\">\n        <TableFilter :column=\"table.getColumn('cpc')!\" />\n      </div>\n      <div class=\"w-36\">\n        <TableFilter :column=\"table.getColumn('traffic')!\" />\n      </div>\n    </div>\n\n    <Table>\n      <TableHeader>\n        <TableRow\n          v-for=\"headerGroup in table.getHeaderGroups()\"\n          :key=\"headerGroup.id\"\n          class=\"bg-muted/50\"\n        >\n          <TableHead\n            v-for=\"header in headerGroup.headers\"\n            :key=\"header.id\"\n            :style=\"{ width: `${header.getSize()}px` }\"\n            class=\"relative h-10 border-t select-none\"\n            :aria-sort=\"\n              header.column.getIsSorted() === 'asc'\n                ? 'ascending'\n                : header.column.getIsSorted() === 'desc'\n                  ? 'descending'\n                  : 'none'\n            \"\n            :colSpan=\"header.colSpan\"\n          >\n            <template v-if=\"!header.isPlaceholder\">\n              <div\n                v-if=\"header.column.getCanSort()\"\n                class=\"flex h-full cursor-pointer items-center justify-between gap-2 select-none\"\n                @click=\"header.column.getToggleSortingHandler()?.($event)\"\n                @keydown=\"\n                  (e) => {\n                    if (\n                      header.column.getCanSort() &&\n                      (e.key === 'Enter' || e.key === ' ')\n                    ) {\n                      e.preventDefault();\n                      header.column.getToggleSortingHandler()?.(e);\n                    }\n                  }\n                \"\n                :tabindex=\"header.column.getCanSort() ? 0 : undefined\"\n              >\n                <FlexRender\n                  :render=\"header.column.columnDef.header\"\n                  :props=\"header.getContext()\"\n                />\n                <LucideChevronUp\n                  v-if=\"header.column.getIsSorted() === 'asc'\"\n                  class=\"size-4 shrink-0 opacity-60\"\n                  aria-hidden=\"true\"\n                />\n                <LucideChevronDown\n                  v-else-if=\"header.column.getIsSorted() === 'desc'\"\n                  class=\"size-4 shrink-0 opacity-60\"\n                  aria-hidden=\"true\"\n                />\n                <span v-else class=\"size-4\" aria-hidden=\"true\" />\n              </div>\n              <FlexRender\n                v-else\n                :render=\"header.column.columnDef.header\"\n                :props=\"header.getContext()\"\n              />\n            </template>\n          </TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        <template v-if=\"table.getRowModel().rows?.length\">\n          <TableRow\n            v-for=\"row in table.getRowModel().rows\"\n            :key=\"row.id\"\n            :data-state=\"row.getIsSelected() && 'selected'\"\n          >\n            <TableCell v-for=\"cell in row.getVisibleCells()\" :key=\"cell.id\">\n              <FlexRender\n                :render=\"cell.column.columnDef.cell\"\n                :props=\"cell.getContext()\"\n              />\n            </TableCell>\n          </TableRow>\n        </template>\n        <template v-else>\n          <TableRow>\n            <TableCell :colspan=\"columns.length\" class=\"h-24 text-center\">\n              No results.\n            </TableCell>\n          </TableRow>\n        </template>\n      </TableBody>\n    </Table>\n    <p class=\"text-muted-foreground mt-4 text-center text-sm\">\n      Data table with filters made with\n      <a\n        class=\"hover:text-foreground underline\"\n        href=\"https://tanstack.com/table\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        TanStack Table\n      </a>\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "table",
      "tanstack",
      "checkbox",
      "search",
      "select",
      "range",
      "input",
      "filter",
      "sort"
    ],
    "colSpan": 3
  },
  "dependencies": [
    "@tanstack/vue-table",
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/checkbox.json",
    "https://originui-vue.com/r/table.json",
    "https://originui-vue.com/r/table/TableFilter.vue.json"
  ]
}