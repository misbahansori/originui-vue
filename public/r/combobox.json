{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "combobox",
  "type": "registry:ui",
  "dependencies": ["reka-ui"],
  "files": [
    {
      "path": "ui/combobox/Combobox.vue",
      "content": "<script setup lang=\"ts\">\nimport {\n  ComboboxRoot,\n  type ComboboxRootEmits,\n  type ComboboxRootProps,\n  useForwardPropsEmits,\n} from \"reka-ui\";\n\nconst props = defineProps<ComboboxRootProps>();\nconst emits = defineEmits<ComboboxRootEmits>();\n\nconst forwarded = useForwardPropsEmits(props, emits);\n</script>\n\n<template>\n  <ComboboxRoot data-slot=\"combobox\" v-bind=\"forwarded\">\n    <slot />\n  </ComboboxRoot>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxAnchor.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { ComboboxAnchorProps } from \"reka-ui\";\nimport { ComboboxAnchor, useForwardProps } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  ComboboxAnchorProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <ComboboxAnchor\n    data-slot=\"combobox-anchor\"\n    v-bind=\"forwarded\"\n    :class=\"cn('w-[200px]', props.class)\"\n  >\n    <slot />\n  </ComboboxAnchor>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxEmpty.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ComboboxEmptyProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\nimport { ComboboxEmpty } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  ComboboxEmptyProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n</script>\n\n<template>\n  <ComboboxEmpty\n    data-slot=\"combobox-empty\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn('py-6 text-center text-sm', props.class)\"\n  >\n    <slot />\n  </ComboboxEmpty>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ComboboxGroupProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\nimport { ComboboxGroup, ComboboxLabel } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  ComboboxGroupProps & {\n    class?: HTMLAttributes[\"class\"];\n    heading?: string;\n  }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n</script>\n\n<template>\n  <ComboboxGroup\n    data-slot=\"combobox-group\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn('text-foreground overflow-hidden p-1', props.class)\"\n  >\n    <ComboboxLabel\n      v-if=\"heading\"\n      class=\"text-muted-foreground px-2 py-1.5 text-xs font-medium\"\n    >\n      {{ heading }}\n    </ComboboxLabel>\n    <slot />\n  </ComboboxGroup>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxInput.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { SearchIcon } from \"lucide-vue-next\";\nimport {\n  ComboboxInput,\n  type ComboboxInputEmits,\n  type ComboboxInputProps,\n  useForwardPropsEmits,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\nconst props = defineProps<\n  ComboboxInputProps & {\n    class?: HTMLAttributes[\"class\"];\n  }\n>();\n\nconst emits = defineEmits<ComboboxInputEmits>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <div\n    data-slot=\"command-input-wrapper\"\n    class=\"flex h-9 items-center gap-2 border-b px-3\"\n  >\n    <SearchIcon class=\"size-4 shrink-0 opacity-50\" />\n    <ComboboxInput\n      data-slot=\"command-input\"\n      :class=\"\n        cn(\n          'placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50',\n          props.class,\n        )\n      \"\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n    >\n      <slot />\n    </ComboboxInput>\n  </div>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ComboboxItemEmits, ComboboxItemProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\nimport { ComboboxItem, useForwardPropsEmits } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  ComboboxItemProps & { class?: HTMLAttributes[\"class\"] }\n>();\nconst emits = defineEmits<ComboboxItemEmits>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <ComboboxItem\n    data-slot=\"combobox-item\"\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        `data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </ComboboxItem>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxList.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ComboboxContentEmits, ComboboxContentProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { ComboboxContent, ComboboxPortal, useForwardPropsEmits } from \"reka-ui\";\n\nconst props = withDefaults(\n  defineProps<\n    ComboboxContentProps & {\n      class?: HTMLAttributes[\"class\"];\n      viewportClass?: HTMLAttributes[\"class\"];\n    }\n  >(),\n  {\n    position: \"popper\",\n    align: \"center\",\n    sideOffset: 4,\n  },\n);\nconst emits = defineEmits<ComboboxContentEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\", \"viewportClass\");\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <ComboboxPortal>\n    <ComboboxContent\n      data-slot=\"combobox-list\"\n      v-bind=\"forwarded\"\n      :class=\"\n        cn(\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-[200px] origin-(--reka-combobox-content-transform-origin) overflow-hidden rounded-md border shadow-md outline-none',\n          props.class,\n        )\n      \"\n    >\n      <slot />\n    </ComboboxContent>\n  </ComboboxPortal>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxSeparator.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ComboboxSeparatorProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\nimport { ComboboxSeparator } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  ComboboxSeparatorProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n</script>\n\n<template>\n  <ComboboxSeparator\n    data-slot=\"combobox-separator\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn('bg-border -mx-1 h-px', props.class)\"\n  >\n    <slot />\n  </ComboboxSeparator>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ComboboxTriggerProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\nimport { ComboboxTrigger, useForwardProps } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  ComboboxTriggerProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <ComboboxTrigger\n    data-slot=\"combobox-trigger\"\n    v-bind=\"forwarded\"\n    :class=\"cn('', props.class)\"\n    tabindex=\"0\"\n  >\n    <slot />\n  </ComboboxTrigger>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/index.ts",
      "content": "export { default as Combobox } from \"./Combobox.vue\";\nexport { default as ComboboxAnchor } from \"./ComboboxAnchor.vue\";\nexport { default as ComboboxEmpty } from \"./ComboboxEmpty.vue\";\nexport { default as ComboboxGroup } from \"./ComboboxGroup.vue\";\nexport { default as ComboboxInput } from \"./ComboboxInput.vue\";\nexport { default as ComboboxItem } from \"./ComboboxItem.vue\";\nexport { default as ComboboxItemIndicator } from \"./ComboboxItemIndicator.vue\";\nexport { default as ComboboxList } from \"./ComboboxList.vue\";\nexport { default as ComboboxSeparator } from \"./ComboboxSeparator.vue\";\nexport { default as ComboboxViewport } from \"./ComboboxViewport.vue\";\n\nexport { ComboboxCancel, ComboboxTrigger } from \"reka-ui\";\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
