{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/dialog/Dialog.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DialogRootEmits, DialogRootProps } from \"reka-ui\";\r\nimport { DialogRoot, useForwardPropsEmits } from \"reka-ui\";\r\n\r\nconst props = defineProps<DialogRootProps>();\r\nconst emits = defineEmits<DialogRootEmits>();\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits);\r\n</script>\r\n\r\n<template>\r\n  <DialogRoot data-slot=\"dialog\" v-bind=\"forwarded\">\r\n    <slot />\r\n  </DialogRoot>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogClose.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DialogCloseProps } from \"reka-ui\";\r\nimport { DialogClose } from \"reka-ui\";\r\n\r\nconst props = defineProps<DialogCloseProps>();\r\n</script>\r\n\r\n<template>\r\n  <DialogClose data-slot=\"dialog-close\" v-bind=\"props\">\r\n    <slot />\r\n  </DialogClose>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport { X } from \"lucide-vue-next\";\r\nimport type { DialogContentEmits, DialogContentProps } from \"reka-ui\";\r\nimport {\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogPortal,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\nimport DialogOverlay from \"./DialogOverlay.vue\";\r\n\r\nconst props = defineProps<\r\n  DialogContentProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\nconst emits = defineEmits<DialogContentEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n</script>\r\n\r\n<template>\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogContent\r\n      data-slot=\"dialog-content\"\r\n      v-bind=\"forwarded\"\r\n      :class=\"\r\n        cn(\r\n          'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-xl border p-6 shadow-lg duration-200 sm:max-w-100',\r\n          props.class,\r\n        )\r\n      \"\r\n    >\r\n      <slot />\r\n\r\n      <DialogClose\r\n        class=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n      >\r\n        <X />\r\n        <span class=\"sr-only\">Close</span>\r\n      </DialogClose>\r\n    </DialogContent>\r\n  </DialogPortal>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogDescription.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type { DialogDescriptionProps } from \"reka-ui\";\r\nimport { DialogDescription, useForwardProps } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DialogDescriptionProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps);\r\n</script>\r\n\r\n<template>\r\n  <DialogDescription\r\n    data-slot=\"dialog-description\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn('text-muted-foreground text-sm', props.class)\"\r\n  >\r\n    <slot />\r\n  </DialogDescription>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogFooter.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<{ class?: HTMLAttributes[\"class\"] }>();\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-slot=\"dialog-footer\"\r\n    :class=\"\r\n      cn('flex flex-col-reverse gap-2 sm:flex-row sm:justify-end', props.class)\r\n    \"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogHeader.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"];\r\n}>();\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-slot=\"dialog-header\"\r\n    :class=\"cn('flex flex-col gap-2 text-center sm:text-left', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogOverlay.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type { DialogOverlayProps } from \"reka-ui\";\r\nimport { DialogOverlay } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DialogOverlayProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n</script>\r\n\r\n<template>\r\n  <DialogOverlay\r\n    data-slot=\"dialog-overlay\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"\r\n      cn(\r\n        'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </DialogOverlay>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogScrollContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport { X } from \"lucide-vue-next\";\r\nimport type { DialogContentEmits, DialogContentProps } from \"reka-ui\";\r\nimport {\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DialogContentProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\nconst emits = defineEmits<DialogContentEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n</script>\r\n\r\n<template>\r\n  <DialogPortal>\r\n    <DialogOverlay\r\n      class=\"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 grid place-items-center overflow-y-auto bg-black/80\"\r\n    >\r\n      <DialogContent\r\n        :class=\"\r\n          cn(\r\n            'border-border bg-background relative z-50 my-8 grid w-full max-w-lg gap-4 border p-6 shadow-lg duration-200 sm:rounded-lg md:w-full',\r\n            props.class,\r\n          )\r\n        \"\r\n        v-bind=\"forwarded\"\r\n        @pointer-down-outside=\"\r\n          (event) => {\r\n            const originalEvent = event.detail.originalEvent;\r\n            const target = originalEvent.target as HTMLElement;\r\n            if (\r\n              originalEvent.offsetX > target.clientWidth ||\r\n              originalEvent.offsetY > target.clientHeight\r\n            ) {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n        \"\r\n      >\r\n        <slot />\r\n\r\n        <DialogClose\r\n          class=\"hover:bg-secondary absolute top-4 right-4 rounded-md p-0.5 transition-colors\"\r\n        >\r\n          <X class=\"h-4 w-4\" />\r\n          <span class=\"sr-only\">Close</span>\r\n        </DialogClose>\r\n      </DialogContent>\r\n    </DialogOverlay>\r\n  </DialogPortal>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogTitle.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type { DialogTitleProps } from \"reka-ui\";\r\nimport { DialogTitle, useForwardProps } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DialogTitleProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps);\r\n</script>\r\n\r\n<template>\r\n  <DialogTitle\r\n    data-slot=\"dialog-title\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn('text-lg leading-none font-semibold', props.class)\"\r\n  >\r\n    <slot />\r\n  </DialogTitle>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/DialogTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DialogTriggerProps } from \"reka-ui\";\r\nimport { DialogTrigger } from \"reka-ui\";\r\n\r\nconst props = defineProps<DialogTriggerProps>();\r\n</script>\r\n\r\n<template>\r\n  <DialogTrigger data-slot=\"dialog-trigger\" v-bind=\"props\">\r\n    <slot />\r\n  </DialogTrigger>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog/index.ts",
      "content": "export { default as Dialog } from \"./Dialog.vue\";\nexport { default as DialogClose } from \"./DialogClose.vue\";\nexport { default as DialogContent } from \"./DialogContent.vue\";\nexport { default as DialogDescription } from \"./DialogDescription.vue\";\nexport { default as DialogFooter } from \"./DialogFooter.vue\";\nexport { default as DialogHeader } from \"./DialogHeader.vue\";\nexport { default as DialogOverlay } from \"./DialogOverlay.vue\";\nexport { default as DialogScrollContent } from \"./DialogScrollContent.vue\";\nexport { default as DialogTitle } from \"./DialogTitle.vue\";\nexport { default as DialogTrigger } from \"./DialogTrigger.vue\";\n",
      "type": "registry:ui"
    }
  ],
  "dependencies": [
    "reka-ui",
    "@vueuse/core",
    "lucide-vue-next"
  ],
  "registryDependencies": []
}