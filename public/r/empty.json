{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "empty",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/empty/Empty.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<{\n  class?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-slot=\"empty\"\n    :class=\"\n      cn(\n        'flex min-w-0 flex-1 flex-col items-center justify-center gap-6 rounded-lg border-dashed p-6 text-center text-balance md:p-12',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/empty/EmptyContent.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<{\n  class?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-slot=\"empty-content\"\n    :class=\"\n      cn(\n        'flex w-full max-w-sm min-w-0 flex-col items-center gap-4 text-sm text-balance',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/empty/EmptyDescription.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\ndefineProps<{\n  class?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <p\n    data-slot=\"empty-description\"\n    :class=\"\n      cn(\n        'text-muted-foreground [&>a:hover]:text-primary text-sm/relaxed [&>a]:underline [&>a]:underline-offset-4',\n        $attrs.class ?? '',\n      )\n    \"\n  >\n    <slot />\n  </p>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/empty/EmptyHeader.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\ndefineProps<{\n  class?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-slot=\"empty-header\"\n    :class=\"\n      cn(\n        'flex max-w-sm flex-col items-center gap-2 text-center',\n        $attrs.class ?? '',\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/empty/EmptyMedia.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport type { EmptyMediaVariants } from \".\";\nimport { cn } from \"@/lib/utils\";\nimport { emptyMediaVariants } from \".\";\n\nconst props = defineProps<{\n  class?: HTMLAttributes[\"class\"];\n  variant?: EmptyMediaVariants[\"variant\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-slot=\"empty-icon\"\n    :data-variant=\"variant\"\n    :class=\"cn(emptyMediaVariants({ variant }), props.class)\"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/empty/EmptyTitle.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport type { EmptyMediaVariants } from \".\";\nimport { cn } from \"@/lib/utils\";\nimport { emptyMediaVariants } from \".\";\n\nconst props = defineProps<{\n  class?: HTMLAttributes[\"class\"];\n  variant?: EmptyMediaVariants[\"variant\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-slot=\"empty-icon\"\n    :data-variant=\"variant\"\n    :class=\"cn(emptyMediaVariants({ variant }), props.class)\"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/empty/index.ts",
      "content": "import type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\n\nexport { default as Empty } from \"./Empty.vue\";\nexport { default as EmptyContent } from \"./EmptyContent.vue\";\nexport { default as EmptyDescription } from \"./EmptyDescription.vue\";\nexport { default as EmptyHeader } from \"./EmptyHeader.vue\";\nexport { default as EmptyMedia } from \"./EmptyMedia.vue\";\nexport { default as EmptyTitle } from \"./EmptyTitle.vue\";\n\nexport const emptyMediaVariants = cva(\n  \"mb-2 flex shrink-0 items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        icon: \"bg-muted text-foreground flex size-10 shrink-0 items-center justify-center rounded-lg [&_svg:not([class*='size-'])]:size-6\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport type EmptyMediaVariants = VariantProps<typeof emptyMediaVariants>;\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "tags": [
      "empty state",
      "extended",
      "empty"
    ],
    "colSpan": 2
  },
  "dependencies": [],
  "registryDependencies": []
}