{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "date-picker",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/date-picker/DatePicker.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\";\nimport { RangeCalendar } from \"@/registry/default/ui/range-calendar\";\nimport { getLocalTimeZone } from \"@internationalized/date\";\nimport { formatDate } from \"@vueuse/core\";\nimport { CalendarIcon } from \"lucide-vue-next\";\nimport { type DateRange } from \"reka-ui\";\nimport { ref } from \"vue\";\n\nconst date = ref<DateRange | undefined>();\n</script>\n\n<template>\n  <Popover>\n    <PopoverTrigger as-child>\n      <Button\n        variant=\"outline\"\n        size=\"sm\"\n        class=\"group bg-background border-input w-full justify-between px-3 text-sm font-normal outline-offset-0 outline-none focus-visible:outline-[3px]\"\n      >\n        <CalendarIcon\n          :size=\"16\"\n          class=\"text-muted-foreground/80 -ms-1 shrink-0 transition-colors\"\n          aria-hidden=\"true\"\n        />\n        <span :class=\"cn('truncate', !date && 'font-medium')\">\n          <template v-if=\"date?.start\">\n            <template v-if=\"date.end\">\n              {{\n                formatDate(\n                  date.start.toDate(getLocalTimeZone()),\n                  \"MMM DD, YYYY\",\n                )\n              }}\n              -\n              {{\n                formatDate(date.end.toDate(getLocalTimeZone()), \"MMM DD, YYYY\")\n              }}\n            </template>\n            <template v-else>\n              {{\n                formatDate(\n                  date.start.toDate(getLocalTimeZone()),\n                  \"MMM DD, YYYY\",\n                )\n              }}\n            </template>\n          </template>\n          <template v-else>Date</template>\n        </span>\n      </Button>\n    </PopoverTrigger>\n    <PopoverContent class=\"w-auto p-0\" align=\"start\">\n      <RangeCalendar v-model=\"date\" />\n    </PopoverContent>\n  </Popover>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-picker/DatePickerField.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { DatePickerField } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<{ class?: HTMLAttributes[\"class\"] }>();\n</script>\n\n<template>\n  <DatePickerField\n    v-bind=\"$attrs\"\n    v-slot=\"slotProps\"\n    :class=\"\n      cn(\n        'border-input bg-background text-foreground focus-within:border-ring focus-within:ring-ring/50 relative flex h-9 items-center rounded-md border px-3 shadow-xs transition-[color,box-shadow] outline-none focus-within:ring-[3px]',\n        props.class,\n      )\n    \"\n  >\n    <slot v-bind=\"slotProps\" />\n  </DatePickerField>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-picker/DatePickerInput.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport {\n  DatePickerInput,\n  type DatePickerInputProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  DatePickerInputProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <DatePickerInput\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        props.part === 'literal'\n          ? 'text-muted-foreground/70'\n          : 'data-[placeholder]:text-muted-foreground/70 focus:bg-muted rounded p-0.5 text-sm focus:shadow-black focus:outline-none',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </DatePickerInput>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-picker/DatePickerTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { LucideCalendar } from \"lucide-vue-next\";\nimport { DatePickerTrigger } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nconst props = defineProps<{\n  class?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <DatePickerTrigger\n    v-bind=\"$attrs\"\n    :class=\"\n      cn(\n        'text-muted-foreground/80 hover:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 absolute inset-y-0 end-0 flex h-full w-9 items-center justify-center rounded-e-md transition-[color,box-shadow] outline-none focus:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50',\n        props.class,\n      )\n    \"\n  >\n    <slot>\n      <LucideCalendar :size=\"16\" />\n    </slot>\n  </DatePickerTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-picker/DatePickerCalendar.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { LucideChevronLeft, LucideChevronRight } from \"lucide-vue-next\";\nimport {\n  DatePickerCalendar,\n  DatePickerCell,\n  DatePickerCellTrigger,\n  DatePickerContent,\n  DatePickerGrid,\n  DatePickerGridBody,\n  DatePickerGridHead,\n  DatePickerGridRow,\n  DatePickerHeadCell,\n  DatePickerHeader,\n  DatePickerHeading,\n  DatePickerNext,\n  DatePickerPrev,\n} from \"reka-ui\";\n\nconst now = today(getLocalTimeZone());\n</script>\n<template>\n  <DatePickerContent\n    :side-offset=\"4\"\n    class=\"bg-background text-popover-foreground data-entering:animate-in data-exiting:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2 z-50 rounded-lg border shadow-lg outline-hidden\"\n  >\n    <DatePickerCalendar\n      v-slot=\"{ weekDays, grid }\"\n      class=\"max-h-[inherit] overflow-auto p-2\"\n    >\n      <DatePickerHeader class=\"flex w-full items-center gap-1 pb-1\">\n        <DatePickerPrev\n          class=\"text-muted-foreground/80 hover:bg-accent hover:text-foreground focus-visible:ring-ring/50 flex size-9 items-center justify-center rounded-md transition-[color,box-shadow] outline-none focus-visible:ring-[3px]\"\n        >\n          <LucideChevronLeft class=\"h-4 w-4\" />\n        </DatePickerPrev>\n\n        <DatePickerHeading class=\"grow text-center text-sm font-medium\" />\n        <DatePickerNext\n          class=\"text-muted-foreground/80 hover:bg-accent hover:text-foreground focus-visible:ring-ring/50 flex size-9 items-center justify-center rounded-md transition-[color,box-shadow] outline-none focus-visible:ring-[3px]\"\n        >\n          <LucideChevronRight class=\"h-4 w-4\" />\n        </DatePickerNext>\n      </DatePickerHeader>\n      <DatePickerGrid\n        v-for=\"month in grid\"\n        :key=\"month.value.toString()\"\n        class=\"w-full border-collapse space-y-1 select-none\"\n      >\n        <DatePickerGridHead>\n          <DatePickerGridRow class=\"flex w-full justify-between\">\n            <DatePickerHeadCell\n              v-for=\"day in weekDays\"\n              :key=\"day\"\n              class=\"text-muted-foreground/80 flex size-9 items-center justify-center rounded-md p-0 text-center text-xs font-medium\"\n            >\n              {{ day }}\n            </DatePickerHeadCell>\n          </DatePickerGridRow>\n        </DatePickerGridHead>\n        <DatePickerGridBody class=\"[&_td]:px-0 [&_td]:py-px\">\n          <DatePickerGridRow\n            v-for=\"(weekDates, index) in month.rows\"\n            :key=\"`weekDate-${index}`\"\n            class=\"flex w-full\"\n          >\n            <DatePickerCell\n              v-for=\"weekDate in weekDates\"\n              :key=\"weekDate.toString()\"\n              :date=\"weekDate\"\n            >\n              <DatePickerCellTrigger\n                :day=\"weekDate\"\n                :month=\"month.value\"\n                :class=\"\n                  cn(\n                    'text-foreground hover:bg-accent data-selected:bg-primary hover:text-foreground data-selected:text-primary-foreground data-focus-visible:ring-ring/50 relative flex size-9 items-center justify-center rounded-md p-0 text-sm font-normal whitespace-nowrap [transition-property:color,background-color,border-radius,box-shadow] duration-150 outline-none data-disabled:pointer-events-none data-disabled:opacity-30 data-focus-visible:z-10 data-focus-visible:ring-[3px] data-outside-visible-view:opacity-30 data-unavailable:pointer-events-none data-unavailable:line-through data-unavailable:opacity-30',\n                    weekDate.compare(now) === 0 &&\n                      cn(\n                        'after:bg-primary after:pointer-events-none after:absolute after:start-1/2 after:bottom-1 after:z-10 after:size-[3px] after:-translate-x-1/2 after:rounded-full',\n                      ),\n                  )\n                \"\n              />\n            </DatePickerCell>\n          </DatePickerGridRow>\n        </DatePickerGridBody>\n      </DatePickerGrid>\n    </DatePickerCalendar>\n  </DatePickerContent>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-picker/index.ts",
      "content": "export { default as DatePickerField } from \"./DatePickerField.vue\";\nexport { default as DatePickerInput } from \"./DatePickerInput.vue\";\nexport { default as DatePickerTrigger } from \"./DatePickerTrigger.vue\";\nexport { default as DatePickerCalendar } from \"./DatePickerCalendar.vue\";\n\nexport { DatePickerRoot as DatePicker } from \"reka-ui\";\n",
      "type": "registry:ui"
    }
  ],
  "dependencies": [
    "@internationalized/date",
    "@vueuse/core",
    "lucide-vue-next",
    "reka-ui"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/button.json",
    "https://originui-vue.com/r/popover.json",
    "https://originui-vue.com/r/range-calendar.json"
  ]
}