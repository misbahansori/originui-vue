{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-592",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-592.vue",
      "content": "<script setup lang=\"ts\">\nimport { LucideLayoutGrid, LucidePlus, LucideSearch } from \"lucide-vue-next\";\nimport { ref, useId } from \"vue\";\n\nimport InfoMenu from \"@/registry/default/components/navbar-components/InfoMenu.vue\";\nimport NotificationMenu from \"@/registry/default/components/navbar-components/NotificationMenu.vue\";\nimport SettingsMenu from \"@/registry/default/components/navbar-components/SettingsMenu.vue\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Input } from \"@/registry/default/ui/input\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport { Switch } from \"@/registry/default/ui/switch\";\n\nconst id = useId();\nconst checked = ref(true);\n</script>\n\n<template>\n  <header class=\"border-b px-4 md:px-6\">\n    <div class=\"flex h-16 items-center justify-between gap-4\">\n      <!-- Left side -->\n      <div class=\"relative flex-1\">\n        <Input\n          :id=\"`input-${id}`\"\n          class=\"peer h-8 w-full max-w-xs ps-8 pe-2\"\n          placeholder=\"Search...\"\n          type=\"search\"\n        />\n        <div\n          class=\"text-muted-foreground/80 pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-2 peer-disabled:opacity-50\"\n        >\n          <LucideSearch :size=\"16\" />\n        </div>\n      </div>\n      <!-- Right side -->\n      <div class=\"flex items-center gap-4\">\n        <!-- Test mode -->\n        <div class=\"inline-flex items-center gap-2 max-md:hidden\">\n          <Label :for=\"`switch-${id}`\" class=\"text-sm font-medium\">\n            Test mode\n          </Label>\n          <Switch\n            :id=\"`switch-${id}`\"\n            v-model=\"checked\"\n            class=\"h-5 w-8 [&_span]:size-4 data-[state=checked]:[&_span]:translate-x-3 data-[state=checked]:[&_span]:rtl:-translate-x-3\"\n            aria-label=\"Toggle switch\"\n          />\n        </div>\n        <div class=\"flex items-center gap-2\">\n          <!-- Layout button -->\n          <Button\n            size=\"icon\"\n            variant=\"ghost\"\n            class=\"text-muted-foreground size-8 rounded-full shadow-none\"\n            aria-label=\"Open layout menu\"\n          >\n            <LucideLayoutGrid :size=\"16\" aria-hidden=\"true\" />\n          </Button>\n          <!-- Info menu -->\n          <InfoMenu />\n          <!-- Notification -->\n          <NotificationMenu />\n          <!-- Settings -->\n          <SettingsMenu />\n        </div>\n        <!-- Add button -->\n        <Button\n          class=\"size-8 rounded-full\"\n          size=\"icon\"\n          aria-label=\"Add new item\"\n        >\n          <LucidePlus :size=\"16\" aria-hidden=\"true\" />\n        </Button>\n      </div>\n    </div>\n  </header>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "components/navbar-components/InfoMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport {\n  LucideBook,\n  LucideInfo,\n  LucideLifeBuoy,\n  LucideMessageCircleMore,\n} from \"lucide-vue-next\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\n</script>\n\n<template>\n  <DropdownMenu>\n    <DropdownMenuTrigger as-child>\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        class=\"size-8 rounded-full shadow-none\"\n        aria-label=\"Open edit menu\"\n      >\n        <LucideInfo\n          class=\"text-muted-foreground\"\n          :size=\"16\"\n          aria-hidden=\"true\"\n        />\n      </Button>\n    </DropdownMenuTrigger>\n    <DropdownMenuContent class=\"pb-2\">\n      <DropdownMenuLabel>Need help?</DropdownMenuLabel>\n      <DropdownMenuItem\n        class=\"cursor-pointer py-1 focus:bg-transparent focus:underline\"\n        as-child\n      >\n        <a href=\"#\">\n          <LucideBook :size=\"16\" class=\"opacity-60\" aria-hidden=\"true\" />\n          Documentation\n        </a>\n      </DropdownMenuItem>\n      <DropdownMenuItem\n        class=\"cursor-pointer py-1 focus:bg-transparent focus:underline\"\n        as-child\n      >\n        <a href=\"#\">\n          <LucideLifeBuoy :size=\"16\" class=\"opacity-60\" aria-hidden=\"true\" />\n          Support\n        </a>\n      </DropdownMenuItem>\n      <DropdownMenuItem\n        class=\"cursor-pointer py-1 focus:bg-transparent focus:underline\"\n        as-child\n      >\n        <a href=\"#\">\n          <LucideMessageCircleMore\n            :size=\"16\"\n            class=\"opacity-60\"\n            aria-hidden=\"true\"\n          />\n          Contact us\n        </a>\n      </DropdownMenuItem>\n    </DropdownMenuContent>\n  </DropdownMenu>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "components/navbar-components/NotificationMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport { LucideBell } from \"lucide-vue-next\";\nimport { ref } from \"vue\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\";\n\ninterface Notification {\n  id: number;\n  user: string;\n  action: string;\n  target: string;\n  timestamp: string;\n  unread: boolean;\n}\n\nconst initialNotifications: Notification[] = [\n  {\n    id: 1,\n    user: \"Chris Tompson\",\n    action: \"requested review on\",\n    target: \"PR #42: Feature implementation\",\n    timestamp: \"15 minutes ago\",\n    unread: true,\n  },\n  {\n    id: 2,\n    user: \"Emma Davis\",\n    action: \"shared\",\n    target: \"New component library\",\n    timestamp: \"45 minutes ago\",\n    unread: true,\n  },\n  {\n    id: 3,\n    user: \"James Wilson\",\n    action: \"assigned you to\",\n    target: \"API integration task\",\n    timestamp: \"4 hours ago\",\n    unread: false,\n  },\n  {\n    id: 4,\n    user: \"Alex Morgan\",\n    action: \"replied to your comment in\",\n    target: \"Authentication flow\",\n    timestamp: \"12 hours ago\",\n    unread: false,\n  },\n  {\n    id: 5,\n    user: \"Sarah Chen\",\n    action: \"commented on\",\n    target: \"Dashboard redesign\",\n    timestamp: \"2 days ago\",\n    unread: false,\n  },\n  {\n    id: 6,\n    user: \"Miky Derya\",\n    action: \"mentioned you in\",\n    target: \"Origin UI open graph image\",\n    timestamp: \"2 weeks ago\",\n    unread: false,\n  },\n];\n\nconst notifications = ref<Notification[]>(initialNotifications);\nconst unreadCount = computed(\n  () => notifications.value.filter((n) => n.unread).length,\n);\n\nconst handleMarkAllAsRead = () => {\n  notifications.value = notifications.value.map((notification) => ({\n    ...notification,\n    unread: false,\n  }));\n};\n\nconst handleNotificationClick = (id: number) => {\n  notifications.value = notifications.value.map((notification) =>\n    notification.id === id ? { ...notification, unread: false } : notification,\n  );\n};\n</script>\n\n<template>\n  <Popover>\n    <PopoverTrigger as-child>\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        class=\"text-muted-foreground relative size-8 rounded-full shadow-none\"\n        aria-label=\"Open notifications\"\n      >\n        <LucideBell :size=\"16\" aria-hidden=\"true\" />\n        <div\n          v-if=\"unreadCount > 0\"\n          aria-hidden=\"true\"\n          class=\"bg-primary absolute top-0.5 right-0.5 size-1 rounded-full\"\n        />\n      </Button>\n    </PopoverTrigger>\n    <PopoverContent class=\"w-80 p-1\">\n      <div class=\"flex items-baseline justify-between gap-4 px-3 py-2\">\n        <div class=\"text-sm font-semibold\">Notifications</div>\n        <button\n          v-if=\"unreadCount > 0\"\n          class=\"text-xs font-medium hover:underline\"\n          @click=\"handleMarkAllAsRead\"\n        >\n          Mark all as read\n        </button>\n      </div>\n      <div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        class=\"bg-border -mx-1 my-1 h-px\"\n      />\n      <div\n        v-for=\"notification in notifications\"\n        :key=\"notification.id\"\n        class=\"hover:bg-accent rounded-md px-3 py-2 text-sm transition-colors\"\n      >\n        <div class=\"relative flex items-start pe-3\">\n          <div class=\"flex-1 space-y-1\">\n            <button\n              class=\"text-foreground/80 text-left after:absolute after:inset-0\"\n              @click=\"handleNotificationClick(notification.id)\"\n            >\n              <span class=\"text-foreground font-medium hover:underline\">\n                {{ notification.user }}\n              </span>\n              {{ notification.action }}\n              <span class=\"text-foreground font-medium hover:underline\">\n                {{ notification.target }}\n              </span>\n              .\n            </button>\n            <div class=\"text-muted-foreground text-xs\">\n              {{ notification.timestamp }}\n            </div>\n          </div>\n          <div v-if=\"notification.unread\" class=\"absolute end-0 self-center\">\n            <span class=\"sr-only\">Unread</span>\n            <svg\n              width=\"6\"\n              height=\"6\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 6 6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              aria-hidden=\"true\"\n            >\n              <circle cx=\"3\" cy=\"3\" r=\"3\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </PopoverContent>\n  </Popover>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "components/navbar-components/SettingsMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport { SettingsIcon } from \"lucide-vue-next\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\n</script>\n\n<template>\n  <DropdownMenu>\n    <DropdownMenuTrigger as-child>\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        class=\"rounded-full shadow-none\"\n        aria-label=\"Open edit menu\"\n      >\n        <SettingsIcon\n          class=\"text-muted-foreground\"\n          :size=\"16\"\n          aria-hidden=\"true\"\n        />\n      </Button>\n    </DropdownMenuTrigger>\n    <DropdownMenuContent class=\"max-w-64\">\n      <DropdownMenuItem>Appearance</DropdownMenuItem>\n      <DropdownMenuItem>Preferences</DropdownMenuItem>\n      <DropdownMenuItem>API Settings</DropdownMenuItem>\n    </DropdownMenuContent>\n  </DropdownMenu>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "navbar, navigation"
    ],
    "colSpan": 3
  },
  "dependencies": [
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/default/components/navbar-components/InfoMenu.vue.json",
    "https://originui-vue.com/r/default/components/navbar-components/NotificationMenu.vue.json",
    "https://originui-vue.com/r/default/components/navbar-components/SettingsMenu.vue.json",
    "https://originui-vue.com/r/button.json",
    "https://originui-vue.com/r/input.json",
    "https://originui-vue.com/r/label.json",
    "https://originui-vue.com/r/switch.json",
    "https://originui-vue.com/r/dropdown-menu.json",
    "https://originui-vue.com/r/popover.json"
  ]
}