{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-546",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-546.vue",
      "content": "<script setup lang=\"ts\">\nimport { useFileUpload } from \"@/composables/useFileUpload\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  LucideAlertCircle,\n  LucideImage,\n  LucideUpload,\n  LucideX,\n} from \"lucide-vue-next\";\n\n// Create a dummy image file\nconst initialFiles = [\n  {\n    name: \"image-01.jpg\",\n    size: 1528737,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=1\",\n    id: \"image-01-123456789\",\n  },\n  {\n    name: \"image-02.jpg\",\n    size: 1528737,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=2\",\n    id: \"image-02-123456789\",\n  },\n  {\n    name: \"image-03.jpg\",\n    size: 1528737,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=3\",\n    id: \"image-03-123456789\",\n  },\n  {\n    name: \"image-04.jpg\",\n    size: 1528737,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=4\",\n    id: \"image-04-123456789\",\n  },\n];\n\nconst maxSizeMB = 5;\nconst maxSize = maxSizeMB * 1024 * 1024; // 5MB default\nconst maxFiles = 6;\n\nconst {\n  files,\n  isDragging,\n  errors,\n  handleDragEnter,\n  handleDragLeave,\n  handleDragOver,\n  handleDrop,\n  openFileDialog,\n  removeFile,\n  getInputProps,\n} = useFileUpload({\n  accept: \"image/svg+xml,image/png,image/jpeg,image/jpg,image/gif\",\n  maxSize,\n  multiple: true,\n  maxFiles,\n  initialFiles,\n});\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-2\">\n    <!-- Drop area -->\n    <div\n      @dragenter=\"handleDragEnter\"\n      @dragleave=\"handleDragLeave\"\n      @dragover=\"handleDragOver\"\n      @drop=\"handleDrop\"\n      :data-dragging=\"isDragging || undefined\"\n      :data-files=\"files.length > 0 || undefined\"\n      class=\"border-input data-[dragging=true]:bg-accent/50 has-[input:focus]:border-ring has-[input:focus]:ring-ring/50 relative flex min-h-52 flex-col items-center overflow-hidden rounded-xl border border-dashed p-4 transition-colors not-data-[files]:justify-center has-[input:focus]:ring-[3px]\"\n    >\n      <input v-bind=\"getInputProps()\" aria-label=\"Upload image file\" />\n      <div v-if=\"files.length > 0\" class=\"flex w-full flex-col gap-3\">\n        <div class=\"flex items-center justify-between gap-2\">\n          <h3 class=\"truncate text-sm font-medium\">\n            Uploaded Files ({{ files.length }})\n          </h3>\n          <Button\n            variant=\"outline\"\n            @click=\"openFileDialog\"\n            :disabled=\"files.length >= maxFiles\"\n          >\n            <LucideUpload\n              class=\"-ms-0.5 size-3.5 opacity-60\"\n              aria-hidden=\"true\"\n            />\n            Add more\n          </Button>\n        </div>\n\n        <div class=\"grid grid-cols-2 gap-4 md:grid-cols-3\">\n          <div\n            v-for=\"file in files\"\n            :key=\"file.id\"\n            class=\"bg-accent relative aspect-square rounded-md\"\n          >\n            <img\n              :src=\"file.preview\"\n              :alt=\"file.file.name\"\n              class=\"size-full rounded-[inherit] object-cover\"\n            />\n            <Button\n              @click=\"removeFile(file.id)\"\n              size=\"icon\"\n              class=\"border-background focus-visible:border-background absolute -top-2 -right-2 size-6 rounded-full border-2 shadow-none\"\n              aria-label=\"Remove image\"\n            >\n              <LucideX class=\"size-3.5\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div\n        v-else\n        class=\"flex flex-col items-center justify-center px-4 py-3 text-center\"\n      >\n        <div\n          class=\"bg-background mb-2 flex size-11 shrink-0 items-center justify-center rounded-full border\"\n          aria-hidden=\"true\"\n        >\n          <LucideImage class=\"size-4 opacity-60\" />\n        </div>\n        <p class=\"mb-1.5 text-sm font-medium\">Drop your images here</p>\n        <p class=\"text-muted-foreground text-xs\">\n          SVG, PNG, JPG or GIF (max. {{ maxSizeMB }}MB)\n        </p>\n        <Button variant=\"outline\" class=\"mt-4\" @click=\"openFileDialog\">\n          <LucideUpload class=\"-ms-1 size-4 opacity-60\" aria-hidden=\"true\" />\n          Select images\n        </Button>\n      </div>\n    </div>\n\n    <div\n      v-if=\"errors.length > 0\"\n      class=\"text-destructive flex items-center gap-1 text-xs\"\n      role=\"alert\"\n    >\n      <LucideAlertCircle class=\"size-3 shrink-0\" />\n      <span>{{ errors[0] }}</span>\n    </div>\n\n    <p\n      aria-live=\"polite\"\n      role=\"region\"\n      class=\"text-muted-foreground mt-2 text-center text-xs\"\n    >\n      Multiple image uploader w/ image grid\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "upload",
      "file"
    ],
    "colSpan": 2
  },
  "dependencies": [
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/useFileUpload.json",
    "https://originui-vue.com/r/button.json"
  ]
}