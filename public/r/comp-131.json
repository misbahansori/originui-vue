{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-131",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui-vue.com/r/button.json",
    "https://originui-vue.com/r/dropdown-menu.json"
  ],
  "files": [
    {
      "path": "components/comp-131.vue",
      "content": "<script setup lang=\"ts\">\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport { LucideChevronDown } from \"lucide-vue-next\";\nimport { computed, ref } from \"vue\";\n\nconst options = [\n  {\n    label: \"Merge pull request\",\n    description:\n      \"All commits from this branch will be added to the base branch via a commit version.\",\n  },\n  {\n    label: \"Squash and merge\",\n    description:\n      \"The 6 commits from this branch will be combined into one commit in the base branch.\",\n  },\n  {\n    label: \"Rebase and merge\",\n    description:\n      \"The 6 commits from this branch will be rebased and added to the base branch.\",\n  },\n];\n\nconst selectedIndex = ref(\"0\");\n\nconst selectedOption = computed(() => {\n  const index = Number(selectedIndex.value);\n  return options[index] || options[0];\n});\n</script>\n\n<template>\n  <div\n    class=\"divide-primary-foreground/30 inline-flex divide-x rounded-md shadow-xs rtl:space-x-reverse\"\n  >\n    <Button\n      class=\"rounded-none shadow-none first:rounded-s-md last:rounded-e-md focus-visible:z-10\"\n    >\n      {{ selectedOption?.label }}\n    </Button>\n    <DropdownMenu>\n      <DropdownMenuTrigger as-child>\n        <Button\n          class=\"rounded-none shadow-none first:rounded-s-md last:rounded-e-md focus-visible:z-10\"\n          size=\"icon\"\n          aria-label=\"Options\"\n        >\n          <LucideChevronDown aria-hidden=\"true\" class=\"size-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent\n        class=\"max-w-64 md:max-w-xs\"\n        side=\"bottom\"\n        :side-offset=\"4\"\n        align=\"end\"\n      >\n        <DropdownMenuRadioGroup v-model=\"selectedIndex\">\n          <DropdownMenuRadioItem\n            v-for=\"(option, index) in options\"\n            :key=\"option.label\"\n            :value=\"String(index)\"\n            class=\"items-start [&>span]:pt-1.5\"\n          >\n            <div class=\"flex flex-col gap-1\">\n              <span class=\"text-sm font-medium\">{{ option.label }}</span>\n              <span class=\"text-muted-foreground text-xs\">\n                {{ option.description }}\n              </span>\n            </div>\n          </DropdownMenuRadioItem>\n        </DropdownMenuRadioGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  </div>\n</template>\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "meta": { "tags": ["button", "dropdown"], "style": 2 }
}
