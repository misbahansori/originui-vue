{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-156",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-156.vue",
      "content": "<script setup lang=\"ts\">\nimport { Input } from \"@/registry/default/ui/input\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/registry/default/ui/radio-group\";\nimport { nextTick, ref, useId, useTemplateRef, watch } from \"vue\";\n\nconst radioId = useId();\nconst inputId = useId();\nconst selectedValue = ref(\"without-expansion\");\nconst inputRef = useTemplateRef(\"inputRef\");\n\nwatch(selectedValue, (newValue) => {\n  if (newValue !== \"with-expansion\") return;\n\n  nextTick(() => {\n    inputRef.value?.$el.focus();\n  });\n});\n</script>\n\n<template>\n  <RadioGroup class=\"gap-6\" v-model=\"selectedValue\">\n    <div>\n      <div class=\"flex items-start gap-2\">\n        <RadioGroupItem\n          value=\"with-expansion\"\n          :id=\"`${radioId}-1`\"\n          :aria-describedby=\"`${radioId}-1-description`\"\n          :aria-controls=\"inputId\"\n        />\n        <div class=\"grow\">\n          <div class=\"grid grow gap-2\">\n            <Label :for=\"`${radioId}-1`\">Radio with expansion</Label>\n            <p\n              :id=\"`${radioId}-1-description`\"\n              class=\"text-muted-foreground text-xs\"\n            >\n              You can use this radio with a label and a description.\n            </p>\n          </div>\n          <!-- Expandable field -->\n          <div\n            role=\"region\"\n            :id=\"inputId\"\n            :aria-labelledby=\"`${radioId}-1`\"\n            class=\"grid transition-all ease-in-out data-[state=collapsed]:grid-rows-[0fr] data-[state=collapsed]:opacity-0 data-[state=expanded]:grid-rows-[1fr] data-[state=expanded]:opacity-100\"\n            :data-state=\"\n              selectedValue === 'with-expansion' ? 'expanded' : 'collapsed'\n            \"\n          >\n            <div class=\"pointer-events-none -m-2 overflow-hidden p-2\">\n              <div class=\"pointer-events-auto mt-3\">\n                <Input\n                  ref=\"inputRef\"\n                  type=\"text\"\n                  id=\"radio-05-additional-info\"\n                  placeholder=\"Enter details\"\n                  aria-label=\"Additional Information\"\n                  :disabled=\"selectedValue !== 'with-expansion'\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex items-start gap-2\">\n      <RadioGroupItem\n        value=\"without-expansion\"\n        :id=\"`${radioId}-2`\"\n        :aria-describedby=\"`${radioId}-2-description`\"\n      />\n      <div class=\"grid grow gap-2\">\n        <Label :for=\"`${radioId}-2`\">Radio without expansion</Label>\n        <p\n          :id=\"`${radioId}-2-description`\"\n          class=\"text-muted-foreground text-xs\"\n        >\n          You can use this checkbox with a label and a description.\n        </p>\n      </div>\n    </div>\n  </RadioGroup>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "radio",
      "label",
      "collapsible",
      "radix"
    ]
  },
  "dependencies": [],
  "registryDependencies": [
    "https://originui-vue.com/r/input.json",
    "https://originui-vue.com/r/label.json",
    "https://originui-vue.com/r/radio-group.json"
  ]
}