{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-551",
  "type": "registry:component",
  "dependencies": ["lucide-vue-next"],
  "registryDependencies": [
    "https://originui-vue.com/r/use-file-upload.json",
    "https://originui-vue.com/r/button.json",
    "https://originui-vue.com/r/table.json"
  ],
  "files": [
    {
      "path": "components/comp-551.vue",
      "content": "<script setup lang=\"ts\">\nimport { formatBytes, useFileUpload } from \"@/composables/useFileUpload\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Table } from \"@/registry/default/ui/table\";\nimport {\n  LucideAlertCircle,\n  LucideDownload,\n  LucideFile,\n  LucideFileArchive,\n  LucideFileSpreadsheet,\n  LucideFileText,\n  LucideFileUp,\n  LucideHeadphones,\n  LucideImage,\n  LucideTrash2,\n  LucideVideo,\n} from \"lucide-vue-next\";\n\nconst initialFiles = [\n  {\n    name: \"document.pdf\",\n    size: 528737,\n    type: \"application/pdf\",\n    url: \"https://originui.com\",\n    id: \"document.pdf-1744638436563-8u5xuls\",\n  },\n  {\n    name: \"intro.zip\",\n    size: 252873,\n    type: \"application/zip\",\n    url: \"https://originui.com\",\n    id: \"intro.zip-1744638436563-8u5xuls\",\n  },\n  {\n    name: \"conclusion.xlsx\",\n    size: 352873,\n    type: \"application/xlsx\",\n    url: \"https://originui.com\",\n    id: \"conclusion.xlsx-1744638436563-8u5xuls\",\n  },\n];\n\nconst getFileIcon = (file: { file: File | { type: string; name: string } }) => {\n  const fileType = file.file instanceof File ? file.file.type : file.file.type;\n  const fileName = file.file instanceof File ? file.file.name : file.file.name;\n\n  if (\n    fileType.includes(\"pdf\") ||\n    fileName.endsWith(\".pdf\") ||\n    fileType.includes(\"word\") ||\n    fileName.endsWith(\".doc\") ||\n    fileName.endsWith(\".docx\")\n  ) {\n    return LucideFileText;\n  } else if (\n    fileType.includes(\"zip\") ||\n    fileType.includes(\"archive\") ||\n    fileName.endsWith(\".zip\") ||\n    fileName.endsWith(\".rar\")\n  ) {\n    return LucideFileArchive;\n  } else if (\n    fileType.includes(\"excel\") ||\n    fileName.endsWith(\".xls\") ||\n    fileName.endsWith(\".xlsx\")\n  ) {\n    return LucideFileSpreadsheet;\n  } else if (fileType.includes(\"video/\")) {\n    return LucideVideo;\n  } else if (fileType.includes(\"audio/\")) {\n    return LucideHeadphones;\n  } else if (fileType.startsWith(\"image/\")) {\n    return LucideImage;\n  }\n  return LucideFile;\n};\n\nconst maxSize = 10 * 1024 * 1024; // 10MB default\nconst maxFiles = 10;\n\nconst {\n  files,\n  isDragging,\n  errors,\n  handleDragEnter,\n  handleDragLeave,\n  handleDragOver,\n  handleDrop,\n  openFileDialog,\n  removeFile,\n  clearFiles,\n  getInputProps,\n} = useFileUpload({\n  multiple: true,\n  maxFiles,\n  maxSize,\n  initialFiles,\n});\n\nconst handleDownload = (url: string | undefined) => {\n  if (url) {\n    window.open(url, \"_blank\");\n  }\n};\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-2\">\n    <!-- Drop area -->\n    <div\n      @dragenter=\"handleDragEnter\"\n      @dragleave=\"handleDragLeave\"\n      @dragover=\"handleDragOver\"\n      @drop=\"handleDrop\"\n      :data-dragging=\"isDragging || undefined\"\n      :data-files=\"files.length > 0 || undefined\"\n      class=\"border-input data-[dragging=true]:bg-accent/50 has-[input:focus]:border-ring has-[input:focus]:ring-ring/50 flex min-h-56 flex-col items-center rounded-xl border border-dashed p-4 transition-colors not-data-[files]:justify-center has-[input:focus]:ring-[3px] data-[files]:hidden\"\n    >\n      <input v-bind=\"getInputProps()\" aria-label=\"Upload files\" />\n      <div class=\"flex flex-col items-center justify-center text-center\">\n        <div\n          class=\"bg-background mb-2 flex size-11 shrink-0 items-center justify-center rounded-full border\"\n          aria-hidden=\"true\"\n        >\n          <LucideFile class=\"size-4 opacity-60\" />\n        </div>\n        <p class=\"mb-1.5 text-sm font-medium\">Upload files</p>\n        <p class=\"text-muted-foreground text-xs\">\n          Max {{ maxFiles }} files âˆ™ Up to {{ formatBytes(maxSize) }}\n        </p>\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          @click=\"openFileDialog\"\n          class=\"mt-4\"\n        >\n          <LucideFileUp class=\"-ms-1 opacity-60\" aria-hidden=\"true\" />\n          Select files\n        </Button>\n      </div>\n    </div>\n\n    <div v-if=\"files.length > 0\" class=\"flex flex-col gap-2\">\n      <!-- Table header with actions -->\n      <div class=\"flex items-center justify-between gap-2\">\n        <h3 class=\"text-sm font-medium\">Files ({{ files.length }})</h3>\n        <div class=\"flex gap-2\">\n          <Button size=\"sm\" variant=\"outline\" @click=\"openFileDialog\">\n            <LucideFileUp\n              class=\"-ms-0.5 size-3.5 opacity-60\"\n              aria-hidden=\"true\"\n            />\n            Add files\n          </Button>\n          <Button size=\"sm\" variant=\"outline\" @click=\"clearFiles\">\n            <LucideTrash2\n              class=\"-ms-0.5 size-3.5 opacity-60\"\n              aria-hidden=\"true\"\n            />\n            Remove all\n          </Button>\n        </div>\n      </div>\n\n      <!-- Table -->\n      <div class=\"bg-background overflow-hidden rounded-md border\">\n        <Table class=\"w-full\">\n          <TableHeader class=\"text-xs\">\n            <TableRow class=\"bg-muted/50\">\n              <TableHead class=\"h-9 py-2 text-left\">Name</TableHead>\n              <TableHead class=\"h-9 py-2 text-left\">Type</TableHead>\n              <TableHead class=\"h-9 py-2 text-left\">Size</TableHead>\n              <TableHead class=\"h-9 w-0 py-2 text-right\">Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody class=\"text-[13px]\">\n            <TableRow v-for=\"file in files\" :key=\"file.id\">\n              <TableCell class=\"max-w-48 py-2 font-medium\">\n                <span class=\"flex items-center gap-2\">\n                  <span class=\"shrink-0\">\n                    <component\n                      :is=\"getFileIcon(file)\"\n                      class=\"size-4 opacity-60\"\n                    />\n                  </span>\n                  <span class=\"truncate\">{{ file.file.name }}</span>\n                </span>\n              </TableCell>\n              <TableCell class=\"text-muted-foreground py-2\">\n                {{ file.file.type.split(\"/\")[1]?.toUpperCase() || \"UNKNOWN\" }}\n              </TableCell>\n              <TableCell class=\"text-muted-foreground py-2\">\n                {{ formatBytes(file.file.size) }}\n              </TableCell>\n              <TableCell class=\"py-2 text-right whitespace-nowrap\">\n                <Button\n                  size=\"icon\"\n                  variant=\"ghost\"\n                  class=\"text-muted-foreground/80 hover:text-foreground size-8 hover:bg-transparent\"\n                  aria-label=\"Download file\"\n                  @click=\"handleDownload(file.preview)\"\n                >\n                  <LucideDownload class=\"size-4\" />\n                </Button>\n                <Button\n                  size=\"icon\"\n                  variant=\"ghost\"\n                  class=\"text-muted-foreground/80 hover:text-foreground size-8 hover:bg-transparent\"\n                  aria-label=\"Remove file\"\n                  @click=\"removeFile(file.id)\"\n                >\n                  <LucideTrash2 class=\"size-4\" />\n                </Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n\n    <div\n      v-if=\"errors.length > 0\"\n      class=\"text-destructive flex items-center gap-1 text-xs\"\n      role=\"alert\"\n    >\n      <LucideAlertCircle class=\"size-3 shrink-0\" />\n      <span>{{ errors[0] }}</span>\n    </div>\n\n    <p\n      aria-live=\"polite\"\n      role=\"region\"\n      class=\"text-muted-foreground mt-2 text-center text-xs\"\n    >\n      Multiple files uploader w/ table\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": { "tags": ["upload", "file"], "colSpan": 2 }
}
