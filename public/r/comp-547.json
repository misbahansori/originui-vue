{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-547",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-547.vue",
      "content": "<script setup lang=\"ts\">\nimport { formatBytes, useFileUpload } from \"@/composables/useFileUpload\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  LucideAlertCircle,\n  LucideImage,\n  LucideUpload,\n  LucideX,\n} from \"lucide-vue-next\";\n\nconst initialFiles = [\n  {\n    name: \"image-01.jpg\",\n    size: 1528737,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=1\",\n    id: \"image-01-123456789\",\n  },\n  {\n    name: \"image-02.jpg\",\n    size: 2345678,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=2\",\n    id: \"image-02-123456789\",\n  },\n  {\n    name: \"image-03.jpg\",\n    size: 3456789,\n    type: \"image/jpeg\",\n    url: \"https://picsum.photos/1000/800?grayscale&random=3\",\n    id: \"image-03-123456789\",\n  },\n];\n\nconst maxSizeMB = 5;\nconst maxSize = maxSizeMB * 1024 * 1024; // 5MB default\nconst maxFiles = 6;\n\nconst {\n  files,\n  isDragging,\n  errors,\n  handleDragEnter,\n  handleDragLeave,\n  handleDragOver,\n  handleDrop,\n  openFileDialog,\n  removeFile,\n  clearFiles,\n  getInputProps,\n} = useFileUpload({\n  accept: \"image/svg+xml,image/png,image/jpeg,image/jpg,image/gif\",\n  maxSize,\n  multiple: true,\n  maxFiles,\n  initialFiles,\n});\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-2\">\n    <!-- Drop area -->\n    <div\n      @dragenter=\"handleDragEnter\"\n      @dragleave=\"handleDragLeave\"\n      @dragover=\"handleDragOver\"\n      @drop=\"handleDrop\"\n      :data-dragging=\"isDragging || undefined\"\n      :data-files=\"files.length > 0 || undefined\"\n      class=\"border-input data-[dragging=true]:bg-accent/50 has-[input:focus]:border-ring has-[input:focus]:ring-ring/50 relative flex min-h-52 flex-col items-center overflow-hidden rounded-xl border border-dashed p-4 transition-colors not-data-[files]:justify-center has-[input:focus]:ring-[3px]\"\n    >\n      <input v-bind=\"getInputProps()\" aria-label=\"Upload image file\" />\n      <div\n        class=\"flex flex-col items-center justify-center px-4 py-3 text-center\"\n      >\n        <div\n          class=\"bg-background mb-2 flex size-11 shrink-0 items-center justify-center rounded-full border\"\n          aria-hidden=\"true\"\n        >\n          <LucideImage class=\"size-4 opacity-60\" />\n        </div>\n        <p class=\"mb-1.5 text-sm font-medium\">Drop your images here</p>\n        <p class=\"text-muted-foreground text-xs\">\n          SVG, PNG, JPG or GIF (max. {{ maxSizeMB }}MB)\n        </p>\n        <Button variant=\"outline\" class=\"mt-4\" @click=\"openFileDialog\">\n          <LucideUpload class=\"-ms-1 size-4 opacity-60\" aria-hidden=\"true\" />\n          Select images\n        </Button>\n      </div>\n    </div>\n\n    <div\n      v-if=\"errors.length > 0\"\n      class=\"text-destructive flex items-center gap-1 text-xs\"\n      role=\"alert\"\n    >\n      <LucideAlertCircle class=\"size-3 shrink-0\" />\n      <span>{{ errors[0] }}</span>\n    </div>\n\n    <!-- File list -->\n    <div v-if=\"files.length > 0\" class=\"space-y-2\">\n      <div\n        v-for=\"file in files\"\n        :key=\"file.id\"\n        class=\"bg-background flex items-center justify-between gap-2 rounded-lg border p-2 pe-3\"\n      >\n        <div class=\"flex items-center gap-3 overflow-hidden\">\n          <div class=\"bg-accent aspect-square shrink-0 rounded\">\n            <img\n              :src=\"file.preview\"\n              :alt=\"file.file.name\"\n              class=\"size-10 rounded-[inherit] object-cover\"\n            />\n          </div>\n          <div class=\"flex min-w-0 flex-col gap-0.5\">\n            <p class=\"truncate text-[13px] font-medium\">\n              {{ file.file.name }}\n            </p>\n            <p class=\"text-muted-foreground text-xs\">\n              {{ formatBytes(file.file.size) }}\n            </p>\n          </div>\n        </div>\n\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          class=\"text-muted-foreground/80 hover:text-foreground -me-2 size-8 hover:bg-transparent\"\n          @click=\"removeFile(file.id)\"\n          aria-label=\"Remove file\"\n        >\n          <LucideX aria-hidden=\"true\" />\n        </Button>\n      </div>\n\n      <!-- Remove all files button -->\n      <div v-if=\"files.length > 1\">\n        <Button size=\"sm\" variant=\"outline\" @click=\"clearFiles\">\n          Remove all files\n        </Button>\n      </div>\n    </div>\n\n    <p\n      aria-live=\"polite\"\n      role=\"region\"\n      class=\"text-muted-foreground mt-2 text-center text-xs\"\n    >\n      Multiple image uploader w/ image list\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "upload",
      "file"
    ],
    "colSpan": 2
  },
  "dependencies": [
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/useFileUpload.json",
    "https://originui-vue.com/r/button.json"
  ]
}