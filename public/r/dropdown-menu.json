{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/dropdown-menu/DropdownMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuRootEmits, DropdownMenuRootProps } from \"reka-ui\";\r\nimport { DropdownMenuRoot, useForwardPropsEmits } from \"reka-ui\";\r\n\r\nconst props = defineProps<DropdownMenuRootProps>();\r\nconst emits = defineEmits<DropdownMenuRootEmits>();\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuRoot data-slot=\"dropdown-menu\" v-bind=\"forwarded\">\r\n    <slot />\r\n  </DropdownMenuRoot>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/index.ts",
      "content": "export { default as DropdownMenu } from \"./DropdownMenu.vue\";\n\nexport { default as DropdownMenuCheckboxItem } from \"./DropdownMenuCheckboxItem.vue\";\nexport { default as DropdownMenuContent } from \"./DropdownMenuContent.vue\";\nexport { default as DropdownMenuGroup } from \"./DropdownMenuGroup.vue\";\nexport { default as DropdownMenuItem } from \"./DropdownMenuItem.vue\";\nexport { default as DropdownMenuLabel } from \"./DropdownMenuLabel.vue\";\nexport { default as DropdownMenuRadioGroup } from \"./DropdownMenuRadioGroup.vue\";\nexport { default as DropdownMenuRadioItem } from \"./DropdownMenuRadioItem.vue\";\nexport { default as DropdownMenuSeparator } from \"./DropdownMenuSeparator.vue\";\nexport { default as DropdownMenuShortcut } from \"./DropdownMenuShortcut.vue\";\nexport { default as DropdownMenuSub } from \"./DropdownMenuSub.vue\";\nexport { default as DropdownMenuSubContent } from \"./DropdownMenuSubContent.vue\";\nexport { default as DropdownMenuSubTrigger } from \"./DropdownMenuSubTrigger.vue\";\nexport { default as DropdownMenuTrigger } from \"./DropdownMenuTrigger.vue\";\nexport { DropdownMenuPortal } from \"reka-ui\";\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport { Check } from \"lucide-vue-next\";\r\nimport type {\r\n  DropdownMenuCheckboxItemEmits,\r\n  DropdownMenuCheckboxItemProps,\r\n} from \"reka-ui\";\r\nimport {\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuItemIndicator,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DropdownMenuCheckboxItemProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\nconst emits = defineEmits<DropdownMenuCheckboxItemEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuCheckboxItem\r\n    data-slot=\"dropdown-menu-checkbox-item\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"\r\n      cn(\r\n        `focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <span\r\n      class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\"\r\n    >\r\n      <DropdownMenuItemIndicator>\r\n        <Check class=\"size-4\" />\r\n      </DropdownMenuItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </DropdownMenuCheckboxItem>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type {\r\n  DropdownMenuContentEmits,\r\n  DropdownMenuContentProps,\r\n} from \"reka-ui\";\r\nimport {\r\n  DropdownMenuContent,\r\n  DropdownMenuPortal,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = withDefaults(\r\n  defineProps<DropdownMenuContentProps & { class?: HTMLAttributes[\"class\"] }>(),\r\n  {\r\n    sideOffset: 4,\r\n  },\r\n);\r\nconst emits = defineEmits<DropdownMenuContentEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuPortal>\r\n    <DropdownMenuContent\r\n      data-slot=\"dropdown-menu-content\"\r\n      v-bind=\"forwarded\"\r\n      :class=\"\r\n        cn(\r\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--reka-dropdown-menu-content-available-height) min-w-[8rem] origin-(--reka-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\r\n          props.class,\r\n        )\r\n      \"\r\n    >\r\n      <slot />\r\n    </DropdownMenuContent>\r\n  </DropdownMenuPortal>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuGroupProps } from \"reka-ui\";\r\nimport { DropdownMenuGroup } from \"reka-ui\";\r\n\r\nconst props = defineProps<DropdownMenuGroupProps>();\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuGroup data-slot=\"dropdown-menu-group\" v-bind=\"props\">\r\n    <slot />\r\n  </DropdownMenuGroup>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type { DropdownMenuItemProps } from \"reka-ui\";\r\nimport { DropdownMenuItem, useForwardProps } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = withDefaults(\r\n  defineProps<\r\n    DropdownMenuItemProps & {\r\n      class?: HTMLAttributes[\"class\"];\r\n      inset?: boolean;\r\n      variant?: \"default\" | \"destructive\";\r\n    }\r\n  >(),\r\n  {\r\n    variant: \"default\",\r\n  },\r\n);\r\n\r\nconst delegatedProps = reactiveOmit(props, \"inset\", \"variant\", \"class\");\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuItem\r\n    data-slot=\"dropdown-menu-item\"\r\n    :data-inset=\"inset ? '' : undefined\"\r\n    :data-variant=\"variant\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"\r\n      cn(\r\n        `focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </DropdownMenuItem>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuLabel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type { DropdownMenuLabelProps } from \"reka-ui\";\r\nimport { DropdownMenuLabel, useForwardProps } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DropdownMenuLabelProps & { class?: HTMLAttributes[\"class\"]; inset?: boolean }\r\n>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"inset\");\r\nconst forwardedProps = useForwardProps(delegatedProps);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuLabel\r\n    data-slot=\"dropdown-menu-label\"\r\n    :data-inset=\"inset ? '' : undefined\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"\r\n      cn('px-2 py-1.5 text-sm font-medium data-[inset]:pl-8', props.class)\r\n    \"\r\n  >\r\n    <slot />\r\n  </DropdownMenuLabel>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type {\r\n  DropdownMenuRadioGroupEmits,\r\n  DropdownMenuRadioGroupProps,\r\n} from \"reka-ui\";\r\nimport { DropdownMenuRadioGroup, useForwardPropsEmits } from \"reka-ui\";\r\n\r\nconst props = defineProps<DropdownMenuRadioGroupProps>();\r\nconst emits = defineEmits<DropdownMenuRadioGroupEmits>();\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuRadioGroup\r\n    data-slot=\"dropdown-menu-radio-group\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot />\r\n  </DropdownMenuRadioGroup>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuRadioItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport { Circle } from \"lucide-vue-next\";\r\nimport type {\r\n  DropdownMenuRadioItemEmits,\r\n  DropdownMenuRadioItemProps,\r\n} from \"reka-ui\";\r\nimport {\r\n  DropdownMenuItemIndicator,\r\n  DropdownMenuRadioItem,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DropdownMenuRadioItemProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\n\r\nconst emits = defineEmits<DropdownMenuRadioItemEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuRadioItem\r\n    data-slot=\"dropdown-menu-radio-item\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"\r\n      cn(\r\n        `focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <span\r\n      class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\"\r\n    >\r\n      <DropdownMenuItemIndicator>\r\n        <Circle class=\"size-2 fill-current\" />\r\n      </DropdownMenuItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </DropdownMenuRadioItem>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type { DropdownMenuSeparatorProps } from \"reka-ui\";\r\nimport { DropdownMenuSeparator } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DropdownMenuSeparatorProps & {\r\n    class?: HTMLAttributes[\"class\"];\r\n  }\r\n>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSeparator\r\n    data-slot=\"dropdown-menu-separator\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('bg-border -mx-1 my-1 h-px', props.class)\"\r\n  />\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuShortcut.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"];\r\n}>();\r\n</script>\r\n\r\n<template>\r\n  <span\r\n    data-slot=\"dropdown-menu-shortcut\"\r\n    :class=\"\r\n      cn('text-muted-foreground ml-auto text-xs tracking-widest', props.class)\r\n    \"\r\n  >\r\n    <slot />\r\n  </span>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSub.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuSubEmits, DropdownMenuSubProps } from \"reka-ui\";\r\nimport { DropdownMenuSub, useForwardPropsEmits } from \"reka-ui\";\r\n\r\nconst props = defineProps<DropdownMenuSubProps>();\r\nconst emits = defineEmits<DropdownMenuSubEmits>();\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSub data-slot=\"dropdown-menu-sub\" v-bind=\"forwarded\">\r\n    <slot />\r\n  </DropdownMenuSub>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSubContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport type {\r\n  DropdownMenuSubContentEmits,\r\n  DropdownMenuSubContentProps,\r\n} from \"reka-ui\";\r\nimport { DropdownMenuSubContent, useForwardPropsEmits } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DropdownMenuSubContentProps & { class?: HTMLAttributes[\"class\"] }\r\n>();\r\nconst emits = defineEmits<DropdownMenuSubContentEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSubContent\r\n    data-slot=\"dropdown-menu-sub-content\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"\r\n      cn(\r\n        'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--reka-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </DropdownMenuSubContent>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { cn } from \"@/lib/utils\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport { ChevronRight } from \"lucide-vue-next\";\r\nimport type { DropdownMenuSubTriggerProps } from \"reka-ui\";\r\nimport { DropdownMenuSubTrigger, useForwardProps } from \"reka-ui\";\r\nimport type { HTMLAttributes } from \"vue\";\r\n\r\nconst props = defineProps<\r\n  DropdownMenuSubTriggerProps & {\r\n    class?: HTMLAttributes[\"class\"];\r\n    inset?: boolean;\r\n  }\r\n>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"inset\");\r\nconst forwardedProps = useForwardProps(delegatedProps);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSubTrigger\r\n    data-slot=\"dropdown-menu-sub-trigger\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"\r\n      cn(\r\n        'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n    <ChevronRight class=\"ml-auto size-4\" />\r\n  </DropdownMenuSubTrigger>\r\n</template>\r\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuTriggerProps } from \"reka-ui\";\r\nimport { DropdownMenuTrigger, useForwardProps } from \"reka-ui\";\r\n\r\nconst props = defineProps<DropdownMenuTriggerProps>();\r\n\r\nconst forwardedProps = useForwardProps(props);\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuTrigger\r\n    data-slot=\"dropdown-menu-trigger\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </DropdownMenuTrigger>\r\n</template>\r\n",
      "type": "registry:ui"
    }
  ],
  "dependencies": [
    "reka-ui",
    "@vueuse/core",
    "lucide-vue-next"
  ],
  "registryDependencies": []
}