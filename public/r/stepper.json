{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "stepper",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/stepper/Stepper.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperRootEmits, StepperRootProps } from \"reka-ui\";\nimport { StepperRoot, useForwardPropsEmits } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperRootProps & { class?: HTMLAttributes[\"class\"] }\n>();\nconst emits = defineEmits<StepperRootEmits>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <StepperRoot\n    v-slot=\"slotProps\"\n    :class=\"\n      cn(\n        'group/stepper inline-flex data-[orientation=horizontal]:w-full data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col',\n        props.class,\n      )\n    \"\n    v-bind=\"forwarded\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </StepperRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/StepperDescription.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperDescriptionProps } from \"reka-ui\";\nimport { StepperDescription, useForwardProps } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperDescriptionProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <StepperDescription\n    v-slot=\"slotProps\"\n    v-bind=\"forwarded\"\n    :class=\"cn('text-muted-foreground text-sm', props.class)\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </StepperDescription>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/StepperIndicator.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperIndicatorProps } from \"reka-ui\";\nimport { StepperIndicator, useForwardProps } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperIndicatorProps & {\n    class?: HTMLAttributes[\"class\"];\n    isLoading?: boolean;\n  }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <StepperIndicator\n    v-slot=\"{ step }\"\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'bg-muted text-muted-foreground group-data-[state=active]/step:bg-primary group-data-[state=completed]/step:bg-primary group-data-[state=active]/step:text-primary-foreground group-data-[state=completed]/step:text-primary-foreground relative flex size-6 shrink-0 items-center justify-center rounded-full text-xs font-medium',\n        props.class,\n      )\n    \"\n  >\n    <slot>\n      <span\n        class=\"transition-all group-data-loading/step:scale-0 group-data-loading/step:opacity-0 group-data-loading/step:transition-none group-data-[state=completed]/step:scale-0 group-data-[state=completed]/step:opacity-0\"\n      >\n        {{ step }}\n      </span>\n      <Icon\n        name=\"lucide:check\"\n        class=\"absolute size-4 scale-0 opacity-0 transition-all group-data-[state=completed]/step:scale-100 group-data-[state=completed]/step:opacity-100\"\n        aria-hidden=\"true\"\n      />\n      <span\n        v-if=\"isLoading\"\n        class=\"absolute opacity-0 transition-all group-data-[state=active]/step:opacity-100 group-data-[state=active]/step:transition-none\"\n      >\n        <Icon\n          name=\"lucide:loader-circle\"\n          class=\"size-3.5 animate-spin\"\n          aria-hidden=\"true\"\n        />\n      </span>\n    </slot>\n  </StepperIndicator>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/StepperItem.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperItemProps } from \"reka-ui\";\nimport { StepperItem, useForwardProps } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperItemProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <StepperItem\n    v-slot=\"slotProps\"\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'group/step flex items-center group-data-[orientation=horizontal]/stepper:flex-row group-data-[orientation=vertical]/stepper:flex-col',\n        props.class,\n      )\n    \"\n  >\n    <slot v-bind=\"slotProps\" />\n  </StepperItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/StepperSeparator.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperSeparatorProps } from \"reka-ui\";\nimport { StepperSeparator, useForwardProps } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperSeparatorProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <StepperSeparator\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'bg-muted group-data-[state=completed]/step:bg-primary m-0.5 group-data-[orientation=horizontal]/stepper:h-0.5 group-data-[orientation=horizontal]/stepper:w-full group-data-[orientation=horizontal]/stepper:flex-1 group-data-[orientation=vertical]/stepper:h-12 group-data-[orientation=vertical]/stepper:w-0.5',\n        props.class,\n      )\n    \"\n  />\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/StepperTitle.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperTitleProps } from \"reka-ui\";\nimport { StepperTitle, useForwardProps } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperTitleProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <StepperTitle\n    v-bind=\"forwarded\"\n    :class=\"cn('text-sm font-medium', props.class)\"\n  >\n    <slot />\n  </StepperTitle>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/StepperTrigger.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport type { StepperTriggerProps } from \"reka-ui\";\nimport { StepperTrigger, useForwardProps } from \"reka-ui\";\n\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  StepperTriggerProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <StepperTrigger\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'focus-visible:border-ring focus-visible:ring-ring/50 inline-flex items-center gap-3 rounded-full outline-none focus-visible:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </StepperTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/stepper/index.ts",
      "content": "export { default as Stepper } from \"./Stepper.vue\";\nexport { default as StepperDescription } from \"./StepperDescription.vue\";\nexport { default as StepperIndicator } from \"./StepperIndicator.vue\";\nexport { default as StepperItem } from \"./StepperItem.vue\";\nexport { default as StepperSeparator } from \"./StepperSeparator.vue\";\nexport { default as StepperTitle } from \"./StepperTitle.vue\";\nexport { default as StepperTrigger } from \"./StepperTrigger.vue\";\n",
      "type": "registry:ui"
    }
  ],
  "dependencies": [
    "reka-ui"
  ],
  "registryDependencies": []
}