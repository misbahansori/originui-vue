{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "carousel",
  "type": "registry:ui",
  "dependencies": [
    "lucide-vue-next"
  ],
  "files": [
    {
      "path": "ui/carousel/Carousel.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type {\n  CarouselEmits,\n  CarouselProps,\n  WithClassAsProps,\n} from \"./interface\";\nimport { useProvideCarousel } from \"./useCarousel\";\n\nconst props = withDefaults(defineProps<CarouselProps & WithClassAsProps>(), {\n  orientation: \"horizontal\",\n});\n\nconst emits = defineEmits<CarouselEmits>();\n\nconst {\n  canScrollNext,\n  canScrollPrev,\n  carouselApi,\n  carouselRef,\n  orientation,\n  scrollNext,\n  scrollPrev,\n} = useProvideCarousel(props, emits);\n\ndefineExpose({\n  canScrollNext,\n  canScrollPrev,\n  carouselApi,\n  carouselRef,\n  orientation,\n  scrollNext,\n  scrollPrev,\n});\n\nfunction onKeyDown(event: KeyboardEvent) {\n  const prevKey = props.orientation === \"vertical\" ? \"ArrowUp\" : \"ArrowLeft\";\n  const nextKey = props.orientation === \"vertical\" ? \"ArrowDown\" : \"ArrowRight\";\n\n  if (event.key === prevKey) {\n    event.preventDefault();\n    scrollPrev();\n\n    return;\n  }\n\n  if (event.key === nextKey) {\n    event.preventDefault();\n    scrollNext();\n  }\n}\n</script>\n\n<template>\n  <div\n    :class=\"cn('relative', props.class)\"\n    role=\"region\"\n    aria-roledescription=\"carousel\"\n    tabindex=\"0\"\n    @keydown=\"onKeyDown\"\n  >\n    <slot\n      :can-scroll-next\n      :can-scroll-prev\n      :carousel-api\n      :carousel-ref\n      :orientation\n      :scroll-next\n      :scroll-prev\n    />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/carousel/CarouselContent.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { WithClassAsProps } from \"./interface\";\nimport { useCarousel } from \"./useCarousel\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\nconst props = defineProps<WithClassAsProps>();\n\nconst { carouselRef, orientation } = useCarousel();\n</script>\n\n<template>\n  <div ref=\"carouselRef\" class=\"overflow-hidden\">\n    <div\n      :class=\"\n        cn(\n          'flex',\n          orientation === 'horizontal' ? '-ml-4' : '-mt-4 flex-col',\n          props.class,\n        )\n      \"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/carousel/CarouselItem.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { WithClassAsProps } from \"./interface\";\nimport { useCarousel } from \"./useCarousel\";\n\nconst props = defineProps<WithClassAsProps>();\n\nconst { orientation } = useCarousel();\n</script>\n\n<template>\n  <div\n    role=\"group\"\n    aria-roledescription=\"slide\"\n    :class=\"\n      cn(\n        'min-w-0 shrink-0 grow-0 basis-full',\n        orientation === 'horizontal' ? 'pl-4' : 'pt-4',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/carousel/CarouselNext.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { ArrowRight } from \"lucide-vue-next\";\nimport type { WithClassAsProps } from \"./interface\";\nimport { useCarousel } from \"./useCarousel\";\n\nconst props = defineProps<WithClassAsProps>();\n\nconst { orientation, canScrollNext, scrollNext } = useCarousel();\n</script>\n\n<template>\n  <Button\n    :disabled=\"!canScrollNext\"\n    :class=\"\n      cn(\n        'absolute h-8 w-8 touch-manipulation rounded-full p-0',\n        orientation === 'horizontal'\n          ? 'top-1/2 -right-12 -translate-y-1/2'\n          : '-bottom-12 left-1/2 -translate-x-1/2 rotate-90',\n        props.class,\n      )\n    \"\n    variant=\"outline\"\n    @click=\"scrollNext\"\n  >\n    <slot>\n      <ArrowRight class=\"h-4 w-4 text-current\" />\n      <span class=\"sr-only\">Next Slide</span>\n    </slot>\n  </Button>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/carousel/CarouselPrevious.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { ArrowLeft } from \"lucide-vue-next\";\nimport type { WithClassAsProps } from \"./interface\";\nimport { useCarousel } from \"./useCarousel\";\n\nconst props = defineProps<WithClassAsProps>();\n\nconst { orientation, canScrollPrev, scrollPrev } = useCarousel();\n</script>\n\n<template>\n  <Button\n    :disabled=\"!canScrollPrev\"\n    :class=\"\n      cn(\n        'absolute h-8 w-8 touch-manipulation rounded-full p-0',\n        orientation === 'horizontal'\n          ? 'top-1/2 -left-12 -translate-y-1/2'\n          : '-top-12 left-1/2 -translate-x-1/2 rotate-90',\n        props.class,\n      )\n    \"\n    variant=\"outline\"\n    @click=\"scrollPrev\"\n  >\n    <slot>\n      <ArrowLeft class=\"h-4 w-4 text-current\" />\n      <span class=\"sr-only\">Previous Slide</span>\n    </slot>\n  </Button>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/carousel/index.ts",
      "content": "export { default as Carousel } from \"./Carousel.vue\";\nexport { default as CarouselContent } from \"./CarouselContent.vue\";\nexport { default as CarouselItem } from \"./CarouselItem.vue\";\nexport { default as CarouselNext } from \"./CarouselNext.vue\";\nexport { default as CarouselPrevious } from \"./CarouselPrevious.vue\";\nexport type { UnwrapRefCarouselApi as CarouselApi } from \"./interface\";\n\nexport { useCarousel } from \"./useCarousel\";\n",
      "type": "registry:ui"
    }
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/button.json"
  ]
}