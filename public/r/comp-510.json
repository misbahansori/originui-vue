{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-510",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-510.vue",
      "content": "<script lang=\"ts\" setup>\nimport {\n  CalendarCell,\n  CalendarCellTrigger,\n  CalendarGrid,\n  CalendarGridBody,\n  CalendarGridHead,\n  CalendarGridRow,\n  CalendarHeadCell,\n  CalendarHeader,\n  CalendarHeading,\n  CalendarNextButton,\n  CalendarPrevButton,\n} from \"@/registry/default/ui/calendar\";\nimport {\n  getLocalTimeZone,\n  today,\n  type DateValue,\n} from \"@internationalized/date\";\nimport { formatDate } from \"@vueuse/core\";\nimport { CalendarRoot } from \"reka-ui\";\n\nconst todayDate = today(getLocalTimeZone());\n\nconst generateMockPriceData = () => {\n  const data: Record<string, number> = {};\n\n  for (let i = 0; i < 180; i++) {\n    const date = new Date(todayDate.toDate(getLocalTimeZone()));\n    date.setDate(todayDate.toDate(getLocalTimeZone()).getDate() + i);\n    const dateKey = formatDate(date, \"YYYY-MM-DD\");\n    const randomPrice = Math.floor(Math.random() * (200 - 80 + 1)) + 80;\n    data[dateKey] = randomPrice;\n  }\n\n  return data;\n};\n\nconst mockPriceData = ref(generateMockPriceData());\n\nconst isDateDisabled = (date: DateValue) => {\n  return !mockPriceData.value[\n    formatDate(date.toDate(getLocalTimeZone()), \"YYYY-MM-DD\")\n  ];\n};\n\nconst getPriceData = (date: DateValue) =>\n  mockPriceData.value[\n    formatDate(date.toDate(getLocalTimeZone()), \"YYYY-MM-DD\")\n  ] ?? null;\n\nconst GOOD_PRICE_THRESHOLD = 100;\n\nconst isGoodPrice = (date: DateValue) => {\n  const price = getPriceData(date);\n\n  return price && price < GOOD_PRICE_THRESHOLD;\n};\n</script>\n\n<template>\n  <div>\n    <CalendarRoot\n      v-slot=\"{ grid, weekDays }\"\n      data-slot=\"calendar\"\n      :numberOfMonths=\"2\"\n      :isDateDisabled=\"isDateDisabled\"\n      class=\"rounded-md border p-3\"\n    >\n      <CalendarHeader>\n        <CalendarHeading />\n        <div class=\"flex items-center gap-1\">\n          <CalendarPrevButton class=\"absolute left-1\" />\n          <CalendarNextButton class=\"absolute right-1\" />\n        </div>\n      </CalendarHeader>\n      <div class=\"mt-4 flex flex-col gap-y-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\">\n        <CalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\n          <CalendarGridHead>\n            <CalendarGridRow>\n              <CalendarHeadCell v-for=\"day in weekDays\" :key=\"day\" class=\"w-12\">\n                {{ day }}\n              </CalendarHeadCell>\n            </CalendarGridRow>\n          </CalendarGridHead>\n          <CalendarGridBody>\n            <CalendarGridRow\n              v-for=\"(weekDates, index) in month.rows\"\n              :key=\"`weekDate-${index}`\"\n              class=\"mt-2 w-full\"\n            >\n              <CalendarCell\n                v-for=\"weekDate in weekDates\"\n                :key=\"weekDate.toString()\"\n                :date=\"weekDate\"\n                class=\"has-data-[outside-view]:invisible\"\n              >\n                <CalendarCellTrigger\n                  :day=\"weekDate\"\n                  :month=\"month.value\"\n                  class=\"flex size-12 flex-col items-center justify-center gap-1 data-[outside-view]:invisible\"\n                >\n                  <span>\n                    {{ formatDate(weekDate.toDate(getLocalTimeZone()), \"D\") }}\n                  </span>\n                  <span\n                    v-if=\"getPriceData(weekDate)\"\n                    class=\"text-[10px] font-medium\"\n                    :class=\"{\n                      'text-emerald-500': isGoodPrice(weekDate),\n                      'text-muted-foreground group-data-selected:text-primary-foreground/70':\n                        !isGoodPrice(weekDate),\n                    }\"\n                  >\n                    ${{ getPriceData(weekDate) }}\n                  </span>\n                </CalendarCellTrigger>\n              </CalendarCell>\n            </CalendarGridRow>\n          </CalendarGridBody>\n        </CalendarGrid>\n      </div>\n    </CalendarRoot>\n    <p class=\"text-muted-foreground mt-4 text-center text-xs\">\n      Pricing Calendar -\n      <a\n        class=\"hover:text-foreground underline\"\n        href=\"https://reka-ui.com/docs/components/calendar#calendar\"\n        target=\"_blank\"\n      >\n        reka-ui.com\n      </a>\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "calendar",
      "date",
      "react daypicker"
    ],
    "colSpan": 3,
    "style": 1
  },
  "dependencies": [
    "@internationalized/date",
    "@vueuse/core",
    "reka-ui"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/calendar.json"
  ]
}