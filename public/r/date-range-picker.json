{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "date-range-picker",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/date-range-picker/DateRangePickerField.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { DateRangePickerField } from \"reka-ui\";\nimport { type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<{ class?: HTMLAttributes[\"class\"] }>();\n</script>\n\n<template>\n  <DateRangePickerField\n    v-bind=\"$attrs\"\n    v-slot=\"slotProps\"\n    :class=\"\n      cn(\n        'border-input bg-background text-foreground focus-within:border-ring focus-within:ring-ring/50 relative flex h-9 items-center rounded-md border px-3 shadow-xs transition-[color,box-shadow] outline-none focus-within:ring-[3px]',\n        props.class,\n      )\n    \"\n  >\n    <slot v-bind=\"slotProps\" />\n  </DateRangePickerField>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-range-picker/DateRangePickerInput.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport {\n  DateRangePickerInput,\n  type DateRangePickerInputProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { type HTMLAttributes, computed } from \"vue\";\n\nconst props = defineProps<\n  DateRangePickerInputProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <DateRangePickerInput\n    :class=\"\n      cn(\n        props.part === 'literal'\n          ? 'text-muted-foreground/70'\n          : 'data-[placeholder]:text-muted-foreground/70 focus:bg-muted rounded p-0.5 text-sm focus:shadow-black focus:outline-none',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </DateRangePickerInput>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-range-picker/DateRangePickerTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { LucideCalendar } from \"lucide-vue-next\";\nimport {\n  DateRangePickerTrigger,\n  type DateRangePickerTriggerProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { type HTMLAttributes, computed } from \"vue\";\n\nconst props = defineProps<\n  DateRangePickerTriggerProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <DateRangePickerTrigger\n    :class=\"\n      cn(\n        'text-muted-foreground/80 hover:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 absolute inset-y-0 end-0 flex h-full w-9 items-center justify-center rounded-e-md transition-[color,box-shadow] outline-none focus:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot>\n      <LucideCalendar :size=\"16\" />\n    </slot>\n  </DateRangePickerTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-range-picker/DateRangePickerCalendar.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { LucideChevronLeft, LucideChevronRight } from \"lucide-vue-next\";\nimport {\n  DateRangePickerCalendar,\n  DateRangePickerCell,\n  DateRangePickerCellTrigger,\n  DateRangePickerContent,\n  DateRangePickerGrid,\n  DateRangePickerGridBody,\n  DateRangePickerGridHead,\n  DateRangePickerGridRow,\n  DateRangePickerHeadCell,\n  DateRangePickerHeader,\n  DateRangePickerHeading,\n  DateRangePickerNext,\n  DateRangePickerPrev,\n} from \"reka-ui\";\n\nconst now = today(getLocalTimeZone());\n</script>\n<template>\n  <DateRangePickerContent\n    :side-offset=\"4\"\n    class=\"bg-background text-popover-foreground data-entering:animate-in data-exiting:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2 z-50 rounded-lg border shadow-lg outline-hidden\"\n  >\n    <DateRangePickerCalendar\n      v-slot=\"{ weekDays, grid }\"\n      class=\"max-h-[inherit] overflow-auto p-2\"\n    >\n      <DateRangePickerHeader class=\"flex w-full items-center gap-1 pb-1\">\n        <DateRangePickerPrev\n          class=\"text-muted-foreground/80 hover:bg-accent hover:text-foreground focus-visible:ring-ring/50 flex size-9 items-center justify-center rounded-md transition-[color,box-shadow] outline-none focus-visible:ring-[3px]\"\n        >\n          <LucideChevronLeft class=\"h-4 w-4\" />\n        </DateRangePickerPrev>\n\n        <DateRangePickerHeading class=\"grow text-center text-sm font-medium\" />\n        <DateRangePickerNext\n          class=\"text-muted-foreground/80 hover:bg-accent hover:text-foreground focus-visible:ring-ring/50 flex size-9 items-center justify-center rounded-md transition-[color,box-shadow] outline-none focus-visible:ring-[3px]\"\n        >\n          <LucideChevronRight class=\"h-4 w-4\" />\n        </DateRangePickerNext>\n      </DateRangePickerHeader>\n      <DateRangePickerGrid\n        v-for=\"month in grid\"\n        :key=\"month.value.toString()\"\n        class=\"w-full border-collapse space-y-1 select-none\"\n      >\n        <DateRangePickerGridHead>\n          <DateRangePickerGridRow class=\"flex w-full justify-between\">\n            <DateRangePickerHeadCell\n              v-for=\"day in weekDays\"\n              :key=\"day\"\n              class=\"text-muted-foreground/80 flex size-9 items-center justify-center rounded-md p-0 text-center text-xs font-medium\"\n            >\n              {{ day }}\n            </DateRangePickerHeadCell>\n          </DateRangePickerGridRow>\n        </DateRangePickerGridHead>\n        <DateRangePickerGridBody class=\"[&_td]:px-0 [&_td]:py-px\">\n          <DateRangePickerGridRow\n            v-for=\"(weekDates, index) in month.rows\"\n            :key=\"`weekDate-${index}`\"\n            class=\"flex w-full\"\n          >\n            <DateRangePickerCell\n              v-for=\"weekDate in weekDates\"\n              :key=\"weekDate.toString()\"\n              :date=\"weekDate\"\n            >\n              <DateRangePickerCellTrigger\n                :day=\"weekDate\"\n                :month=\"month.value\"\n                :class=\"\n                  cn(\n                    'data-selected:bg-accent data-selected:text-foreground data-invalid:data-selection-end:bg-destructive data-invalid:data-selection-start:bg-destructive data-selection-end:bg-primary data-selection-start:bg-primary data-selection-end:text-primary-foreground data-selection-start:text-primary-foreground text-foreground hover:bg-accent hover:text-foreground data-focus-visible:ring-ring/50 relative flex size-9 items-center justify-center rounded-md p-0 text-sm font-normal whitespace-nowrap [transition-property:color,background-color,border-radius,box-shadow] duration-150 outline-none data-disabled:pointer-events-none data-disabled:opacity-30 data-focus-visible:z-10 data-focus-visible:ring-[3px] data-invalid:bg-red-100 data-outside-visible-view:opacity-30 data-selected:rounded-none data-selection-end:rounded-e-md data-invalid:data-selection-end:text-white data-selection-start:rounded-s-md data-invalid:data-selection-start:text-white data-unavailable:pointer-events-none data-unavailable:line-through data-unavailable:opacity-30',\n                    weekDate.compare(now) === 0 &&\n                      cn(\n                        'data-selection-end:after:bg-background data-selection-start:after:bg-background after:bg-primary after:pointer-events-none after:absolute after:start-1/2 after:bottom-1 after:z-10 after:size-[3px] after:-translate-x-1/2 after:rounded-full',\n                      ),\n                  )\n                \"\n              />\n            </DateRangePickerCell>\n          </DateRangePickerGridRow>\n        </DateRangePickerGridBody>\n      </DateRangePickerGrid>\n    </DateRangePickerCalendar>\n  </DateRangePickerContent>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/date-range-picker/index.ts",
      "content": "export { default as DateRangePickerField } from \"./DateRangePickerField.vue\";\nexport { default as DateRangePickerInput } from \"./DateRangePickerInput.vue\";\nexport { default as DateRangePickerTrigger } from \"./DateRangePickerTrigger.vue\";\nexport { default as DateRangePickerCalendar } from \"./DateRangePickerCalendar.vue\";\n\nexport { DateRangePickerRoot as DateRangePicker } from \"reka-ui\";\n",
      "type": "registry:ui"
    }
  ],
  "dependencies": [
    "reka-ui",
    "lucide-vue-next",
    "@internationalized/date"
  ],
  "registryDependencies": []
}