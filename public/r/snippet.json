{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "snippet",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/snippet/Snippet.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport type { TabsRootEmits, TabsRootProps } from \"reka-ui\";\nimport { TabsRoot, useForwardPropsEmits } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  TabsRootProps & { class?: HTMLAttributes[\"class\"] }\n>();\nconst emits = defineEmits<TabsRootEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <TabsRoot\n    data-slot=\"snippet\"\n    v-bind=\"forwarded\"\n    :class=\"\n      cn('group w-full gap-0 overflow-hidden rounded-md border', props.class)\n    \"\n  >\n    <slot />\n  </TabsRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/snippet/SnippetCopyButton.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { ButtonVariants } from \"@/registry/default/ui/button\";\nimport { buttonVariants } from \"@/registry/default/ui/button\";\nimport { useClipboard } from \"@vueuse/core\";\nimport { CheckIcon, CopyIcon } from \"lucide-vue-next\";\nimport type { PrimitiveProps } from \"reka-ui\";\nimport { Primitive } from \"reka-ui\";\nimport { type HTMLAttributes } from \"vue\";\n\ninterface Props extends PrimitiveProps {\n  variant?: ButtonVariants[\"variant\"];\n  size?: ButtonVariants[\"size\"];\n  class?: HTMLAttributes[\"class\"];\n  value: string;\n  timeout?: number;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  as: \"button\",\n  variant: \"ghost\",\n  size: \"icon\",\n  timeout: 2000,\n});\n\nconst { copy, copied } = useClipboard({\n  copiedDuring: props.timeout,\n});\n</script>\n\n<template>\n  <Primitive\n    data-slot=\"snippet-copy-button\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :class=\"\n      cn(\n        buttonVariants({ variant, size }),\n        'opacity-0 transition-opacity group-hover:opacity-100',\n        props.class,\n      )\n    \"\n    @click=\"copy(props.value)\"\n  >\n    <slot>\n      <div\n        class=\"transition-all\"\n        :class=\"!copied ? 'scale-100 opacity-100' : 'scale-0 opacity-0'\"\n      >\n        <CopyIcon class=\"size-4\" aria-hidden=\"true\" />\n      </div>\n      <div\n        class=\"absolute transition-all\"\n        :class=\"copied ? 'scale-100 opacity-100' : 'scale-0 opacity-0'\"\n      >\n        <CheckIcon class=\"size-4\" aria-hidden=\"true\" />\n      </div>\n    </slot>\n  </Primitive>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/snippet/SnippetHeader.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport type { PrimitiveProps } from \"reka-ui\";\nimport { Primitive } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\ninterface Props extends PrimitiveProps {\n  class?: HTMLAttributes[\"class\"];\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  as: \"div\",\n});\n</script>\n\n<template>\n  <Primitive\n    data-slot=\"snippet-header\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :class=\"\n      cn(\n        'bg-secondary flex flex-row items-center justify-between border-b p-1.5',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/snippet/SnippetTabsContent.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { TabsContent, type TabsContentProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  TabsContentProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n</script>\n\n<template>\n  <TabsContent\n    data-slot=\"snippet-tabs-content\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn('bg-background mt-0 text-sm outline-none', props.class)\"\n  >\n    <slot />\n  </TabsContent>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/snippet/SnippetTabsList.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { TabsList, type TabsListProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  TabsListProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n</script>\n\n<template>\n  <TabsList\n    data-slot=\"snippet-tabs-list\"\n    v-bind=\"delegatedProps\"\n    :class=\"\n      cn(\n        'bg-muted text-muted-foreground/70 inline-flex w-fit items-center justify-center rounded-md',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </TabsList>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/snippet/SnippetTabsTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport { cn } from \"@/lib/utils\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { TabsTrigger, type TabsTriggerProps, useForwardProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  TabsTriggerProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <TabsTrigger\n    data-slot=\"snippet-tabs-trigger\"\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'hover:text-muted-foreground data-[state=active]:bg-background data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 inline-flex items-center justify-center gap-1.5 rounded-sm px-3 py-1.5 text-sm font-medium whitespace-nowrap transition-all outline-none focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-xs [&_svg]:shrink-0',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </TabsTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/snippet/index.ts",
      "content": "export { default as Snippet } from \"./Snippet.vue\";\nexport { default as SnippetHeader } from \"./SnippetHeader.vue\";\nexport { default as SnippetCopyButton } from \"./SnippetCopyButton.vue\";\nexport { default as SnippetTabsList } from \"./SnippetTabsList.vue\";\nexport { default as SnippetTabsTrigger } from \"./SnippetTabsTrigger.vue\";\nexport { default as SnippetTabsContent } from \"./SnippetTabsContent.vue\";\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "tags": [
      "snippet",
      "extended",
      "code",
      "copy",
      "tabs",
      "command"
    ],
    "colSpan": 2
  },
  "dependencies": [
    "@vueuse/core",
    "reka-ui",
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/button.json"
  ]
}