{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "comp-572",
  "type": "registry:component",
  "files": [
    {
      "path": "components/comp-572.vue",
      "content": "<script setup lang=\"ts\">\nimport { Tree, TreeItem, TreeItemLabel } from \"@/registry/default/ui/tree\";\nimport {\n  LucideCircleX,\n  LucideFile,\n  LucideFilter,\n  LucideFolder,\n  LucideFolderOpen,\n} from \"lucide-vue-next\";\nimport { computed, ref } from \"vue\";\n\ninterface Item {\n  name: string;\n  children?: Item[];\n}\n\nconst items: Item[] = [\n  {\n    name: \"Engineering\",\n    children: [\n      {\n        name: \"Frontend\",\n        children: [\n          {\n            name: \"Design System\",\n            children: [\n              { name: \"Components\" },\n              { name: \"Tokens\" },\n              { name: \"Guidelines\" },\n            ],\n          },\n          { name: \"Web Platform\" },\n        ],\n      },\n      {\n        name: \"Backend\",\n        children: [{ name: \"APIs\" }, { name: \"Infrastructure\" }],\n      },\n      { name: \"Platform Team\" },\n    ],\n  },\n  {\n    name: \"Marketing\",\n    children: [{ name: \"Content\" }, { name: \"SEO\" }],\n  },\n  {\n    name: \"Operations\",\n    children: [{ name: \"HR\" }, { name: \"Finance\" }],\n  },\n];\n\nconst searchQuery = ref(\"\");\nconst initialExpanded = [\"Engineering\", \"Frontend\", \"Design System\"];\nconst expandedItems = ref(initialExpanded);\n\n// Function to check if an item matches the search query\nconst matchesSearch = (item: Item): boolean => {\n  if (!searchQuery.value) return false;\n  const query = searchQuery.value.toLowerCase();\n  return item.name.toLowerCase().includes(query);\n};\n\n// Function to find matching items and their parents\nconst findMatches = (items: Item[], parents: string[] = []): string[] => {\n  return items.reduce((acc: string[], item) => {\n    if (matchesSearch(item)) {\n      acc.push(...parents, item.name);\n    }\n    if (item.children) {\n      acc.push(...findMatches(item.children, [...parents, item.name]));\n    }\n    return acc;\n  }, []);\n};\n\n// Handle search\nwatch(searchQuery, (value) => {\n  if (searchQuery.value.length > 0) {\n    expandedItems.value = [...new Set(findMatches(items))];\n  } else {\n    expandedItems.value = initialExpanded;\n  }\n});\n\n// Function to filter items based on search query\nconst filteredItems = computed(() => {\n  if (!searchQuery.value) return items;\n\n  const filterItems = (items: Item[]): Item[] => {\n    return items.reduce((acc: Item[], item) => {\n      const matches = matchesSearch(item);\n      const filteredChildren = item.children\n        ? filterItems(item.children)\n        : undefined;\n\n      if (matches || (filteredChildren && filteredChildren.length > 0)) {\n        acc.push({\n          ...item,\n          children: filteredChildren,\n        });\n      }\n      return acc;\n    }, []);\n  };\n\n  return filterItems(items);\n});\n</script>\n\n<template>\n  <div class=\"flex h-full flex-col gap-2 *:first:grow\">\n    <div class=\"flex-1\">\n      <div class=\"relative mb-2\">\n        <Input\n          class=\"peer ps-9\"\n          type=\"search\"\n          placeholder=\"Filter items...\"\n          v-model=\"searchQuery\"\n        />\n        <div\n          class=\"text-muted-foreground/80 pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-3 peer-disabled:opacity-50\"\n        >\n          <LucideFilter class=\"size-4\" aria-hidden=\"true\" />\n        </div>\n        <button\n          v-if=\"searchQuery\"\n          class=\"text-muted-foreground/80 hover:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 absolute inset-y-0 end-0 flex h-full w-9 items-center justify-center rounded-e-md transition-[color,box-shadow] outline-none focus:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n          aria-label=\"Clear search\"\n          @click=\"searchQuery = ''\"\n        >\n          <LucideCircleX class=\"size-4\" aria-hidden=\"true\" />\n        </button>\n      </div>\n      <Tree\n        :items=\"filteredItems\"\n        :getKey=\"(item) => item.name\"\n        v-slot=\"{ flattenItems }\"\n        v-model:expanded=\"expandedItems\"\n      >\n        <TreeItem\n          v-for=\"item in flattenItems\"\n          v-bind=\"item\"\n          v-slot=\"{ isExpanded }\"\n          :data-search-match=\"matchesSearch(item.value)\"\n        >\n          <TreeItemLabel\n            :hasChildren=\"item.hasChildren\"\n            class=\"before:bg-background relative before:absolute before:inset-x-0 before:-inset-y-0.5 before:-z-10\"\n          >\n            <span class=\"flex items-center gap-2\">\n              <template v-if=\"item.hasChildren\">\n                <LucideFolderOpen\n                  v-if=\"isExpanded\"\n                  class=\"text-muted-foreground pointer-events-none size-4\"\n                />\n                <LucideFolder\n                  v-else\n                  class=\"text-muted-foreground pointer-events-none size-4\"\n                />\n              </template>\n              <LucideFile\n                v-else\n                class=\"text-muted-foreground pointer-events-none size-4\"\n              />\n              <span>\n                {{ item.value.name }}\n              </span>\n            </span>\n          </TreeItemLabel>\n        </TreeItem>\n      </Tree>\n    </div>\n    <p\n      aria-live=\"polite\"\n      role=\"region\"\n      class=\"text-muted-foreground mt-2 text-xs\"\n    >\n      Tree with search and filter âˆ™\n      <a\n        href=\"https://reka-ui.com/docs/components/tree\"\n        class=\"hover:text-foreground underline\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Reka UI Tree\n      </a>\n    </p>\n  </div>\n</template>\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "tree"
    ],
    "colSpan": 1
  },
  "dependencies": [
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "https://originui-vue.com/r/tree.json"
  ]
}