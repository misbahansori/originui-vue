{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "calendar",
  "type": "registry:ui",
  "dependencies": ["reka-ui", "lucide-vue-next"],
  "files": [
    {
      "path": "ui/calendar/Calendar.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport {\n  CalendarRoot,\n  type CalendarRootEmits,\n  type CalendarRootProps,\n  useForwardPropsEmits,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\nimport {\n  CalendarCell,\n  CalendarCellTrigger,\n  CalendarGrid,\n  CalendarGridBody,\n  CalendarGridHead,\n  CalendarGridRow,\n  CalendarHeadCell,\n  CalendarHeader,\n  CalendarHeading,\n  CalendarNextButton,\n  CalendarPrevButton,\n} from \".\";\n\nconst props = defineProps<\n  CalendarRootProps & { class?: HTMLAttributes[\"class\"] }\n>();\nconst emits = defineEmits<CalendarRootEmits>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <CalendarRoot\n    v-slot=\"{ grid, weekDays }\"\n    data-slot=\"calendar\"\n    :class=\"cn('p-3', props.class)\"\n    v-bind=\"forwarded\"\n  >\n    <CalendarHeader>\n      <CalendarHeading />\n\n      <div class=\"flex items-center gap-1\">\n        <CalendarPrevButton />\n        <CalendarNextButton />\n      </div>\n    </CalendarHeader>\n\n    <div class=\"mt-4 flex flex-col gap-y-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\">\n      <CalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\n        <CalendarGridHead>\n          <CalendarGridRow>\n            <CalendarHeadCell v-for=\"day in weekDays\" :key=\"day\">\n              {{ day }}\n            </CalendarHeadCell>\n          </CalendarGridRow>\n        </CalendarGridHead>\n        <CalendarGridBody>\n          <CalendarGridRow\n            v-for=\"(weekDates, index) in month.rows\"\n            :key=\"`weekDate-${index}`\"\n            class=\"mt-2 w-full\"\n          >\n            <CalendarCell\n              v-for=\"weekDate in weekDates\"\n              :key=\"weekDate.toString()\"\n              :date=\"weekDate\"\n            >\n              <CalendarCellTrigger :day=\"weekDate\" :month=\"month.value\" />\n            </CalendarCell>\n          </CalendarGridRow>\n        </CalendarGridBody>\n      </CalendarGrid>\n    </div>\n  </CalendarRoot>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarCell.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport { CalendarCell, type CalendarCellProps, useForwardProps } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarCellProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarCell\n    data-slot=\"calendar-cell\"\n    :class=\"\n      cn(\n        '[&:has([data-selected])]:bg-accent relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([data-selected])]:rounded-md',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarCell>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarCellTrigger.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/registry/default/ui/button\";\nimport {\n  CalendarCellTrigger,\n  type CalendarCellTriggerProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = withDefaults(\n  defineProps<CalendarCellTriggerProps & { class?: HTMLAttributes[\"class\"] }>(),\n  {\n    as: \"button\",\n  },\n);\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarCellTrigger\n    data-slot=\"calendar-cell-trigger\"\n    :class=\"\n      cn(\n        buttonVariants({ variant: 'ghost' }),\n        'size-8 cursor-default p-0 font-normal aria-selected:opacity-100',\n        '[&[data-today]:not([data-selected])]:bg-accent [&[data-today]:not([data-selected])]:text-accent-foreground',\n        // Selected\n        'data-[selected]:bg-primary data-[selected]:text-primary-foreground data-[selected]:hover:bg-primary data-[selected]:hover:text-primary-foreground data-[selected]:focus:bg-primary data-[selected]:focus:text-primary-foreground data-[selected]:opacity-100',\n        // Disabled\n        'data-[disabled]:text-muted-foreground data-[disabled]:opacity-50',\n        // Unavailable\n        'data-[unavailable]:text-destructive-foreground data-[unavailable]:line-through',\n        // Outside months\n        'data-[outside-view]:text-muted-foreground',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarCellTrigger>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGrid.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport { CalendarGrid, type CalendarGridProps, useForwardProps } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarGridProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarGrid\n    data-slot=\"calendar-grid\"\n    :class=\"cn('w-full border-collapse space-x-1', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarGrid>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGridBody.vue",
      "content": "<script lang=\"ts\" setup>\nimport { CalendarGridBody, type CalendarGridBodyProps } from \"reka-ui\";\n\nconst props = defineProps<CalendarGridBodyProps>();\n</script>\n\n<template>\n  <CalendarGridBody data-slot=\"calendar-grid-body\" v-bind=\"props\">\n    <slot />\n  </CalendarGridBody>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGridHead.vue",
      "content": "<script lang=\"ts\" setup>\nimport type { HTMLAttributes } from \"vue\";\nimport { CalendarGridHead, type CalendarGridHeadProps } from \"reka-ui\";\n\nconst props = defineProps<\n  CalendarGridHeadProps & { class?: HTMLAttributes[\"class\"] }\n>();\n</script>\n\n<template>\n  <CalendarGridHead data-slot=\"calendar-grid-head\" v-bind=\"props\">\n    <slot />\n  </CalendarGridHead>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGridRow.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport {\n  CalendarGridRow,\n  type CalendarGridRowProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarGridRowProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarGridRow\n    data-slot=\"calendar-grid-row\"\n    :class=\"cn('flex', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarGridRow>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarHeadCell.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport {\n  CalendarHeadCell,\n  type CalendarHeadCellProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarHeadCellProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarHeadCell\n    data-slot=\"calendar-head-cell\"\n    :class=\"\n      cn(\n        'text-muted-foreground w-8 rounded-md text-[0.8rem] font-normal',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarHeadCell>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarHeader.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport {\n  CalendarHeader,\n  type CalendarHeaderProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarHeaderProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarHeader\n    data-slot=\"calendar-header\"\n    :class=\"\n      cn('relative flex w-full items-center justify-center pt-1', props.class)\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarHeader>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarHeading.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport {\n  CalendarHeading,\n  type CalendarHeadingProps,\n  useForwardProps,\n} from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarHeadingProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\ndefineSlots<{\n  default: (props: { headingValue: string }) => any;\n}>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarHeading\n    v-slot=\"{ headingValue }\"\n    data-slot=\"calendar-heading\"\n    :class=\"cn('text-sm font-medium', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot :heading-value>\n      {{ headingValue }}\n    </slot>\n  </CalendarHeading>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarNextButton.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/registry/default/ui/button\";\nimport { ChevronRight } from \"lucide-vue-next\";\nimport { CalendarNext, type CalendarNextProps, useForwardProps } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarNextProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarNext\n    data-slot=\"calendar-next-button\"\n    :class=\"\n      cn(\n        buttonVariants({ variant: 'outline' }),\n        'absolute right-1',\n        'size-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot>\n      <ChevronRight class=\"size-4\" />\n    </slot>\n  </CalendarNext>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarPrevButton.vue",
      "content": "<script lang=\"ts\" setup>\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/registry/default/ui/button\";\nimport { ChevronLeft } from \"lucide-vue-next\";\nimport { CalendarPrev, type CalendarPrevProps, useForwardProps } from \"reka-ui\";\nimport { computed, type HTMLAttributes } from \"vue\";\n\nconst props = defineProps<\n  CalendarPrevProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props;\n\n  return delegated;\n});\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <CalendarPrev\n    data-slot=\"calendar-prev-button\"\n    :class=\"\n      cn(\n        buttonVariants({ variant: 'outline' }),\n        'absolute left-1',\n        'size-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n        props.class,\n      )\n    \"\n    v-bind=\"forwardedProps\"\n  >\n    <slot>\n      <ChevronLeft class=\"size-4\" />\n    </slot>\n  </CalendarPrev>\n</template>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/index.ts",
      "content": "export { default as Calendar } from \"./Calendar.vue\";\nexport { default as CalendarCell } from \"./CalendarCell.vue\";\nexport { default as CalendarCellTrigger } from \"./CalendarCellTrigger.vue\";\nexport { default as CalendarGrid } from \"./CalendarGrid.vue\";\nexport { default as CalendarGridBody } from \"./CalendarGridBody.vue\";\nexport { default as CalendarGridHead } from \"./CalendarGridHead.vue\";\nexport { default as CalendarGridRow } from \"./CalendarGridRow.vue\";\nexport { default as CalendarHeadCell } from \"./CalendarHeadCell.vue\";\nexport { default as CalendarHeader } from \"./CalendarHeader.vue\";\nexport { default as CalendarHeading } from \"./CalendarHeading.vue\";\nexport { default as CalendarNextButton } from \"./CalendarNextButton.vue\";\nexport { default as CalendarPrevButton } from \"./CalendarPrevButton.vue\";\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
